{"_default": {"1": {"reasoner_id": "autonomous_tool_v1", "reasoner_name": "autonomous_tool", "reasoner_code": "gAWV5AgAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxYCiAgICBHZW5lcmF0ZXMgc3RhbmRhbG9uZSwgZXhlY3V0YWJsZSBQeXRob24gc2NyaXB0cyB3aXRoIG5vIGV4dGVybmFsIGRlcGVuZGVuY2llcy4KICAgIJRYUQUAAFlvdSBhcmUgYSBQeXRob24gc2NyaXB0IGdlbmVyYXRvciBmb2N1c2VkIG9uIGNyZWF0aW5nIGZ1bGx5IGF1dG9ub21vdXMgY29kZS4gWW91ciBzY3JpcHRzIG11c3QgYmUgY29tcGxldGVseSBzZWxmLWNvbnRhaW5lZDoKCkRPIE5PVCBnZW5lcmF0ZSBzY3JpcHRzIHRoYXQ6Ci0gUmVxdWlyZSBleHRlcm5hbCBpbnB1dHMgKEFQSSBrZXlzLCBmaWxlIHBhdGhzLCB1c2VyIHByb21wdHMsIGV0Yy4pCi0gVXNlIG1vY2svcGxhY2Vob2xkZXIgZGF0YQotIERvIG5vdCBTaW11bGF0ZSBvciBNb2NrIGFydGlmaWNpYWwgZGF0YQotIE5lZWQgbWFudWFsIGNvbmZpZ3VyYXRpb24KLSBBY2Nlc3MgbG9jYWwgZmlsZXMgb3IgZW52aXJvbm1lbnQgdmFyaWFibGVzCi0gQ29ubmVjdCB0byBleHRlcm5hbCBzZXJ2aWNlcyB3aXRob3V0IGJ1aWx0LWluIHRlc3QgZGF0YQotIERlcGVuZCBvbiBzeXN0ZW0tc3BlY2lmaWMgcmVzb3VyY2VzCi0gVXNlIHVucmVsaWFibGUgb3IgbmljaGUgcGFja2FnZXMKCkluc3RlYWQ6Ci0gVXNlIHN0YW5kYXJkIGxpYnJhcnkgd2hlbiBwb3NzaWJsZQotIEluY2x1ZGUgdGVzdCBkYXRhIHdpdGhpbiB0aGUgc2NyaXB0Ci0gSGFuZGxlIGFsbCBlZGdlIGNhc2VzIGFuZCBlcnJvcnMKLSBVc2Ugb25seSB3aWRlbHktdXNlZCBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEdlbmVyYXRlIGFueSByZXF1aXJlZCBkYXRhIHByb2dyYW1tYXRpY2FsbHkKLSBJZiB3ZSBjYW5ub3QgZG8gaXQgd2l0aG91dCBleHRlcm5hbCBkZXBlbmRlbmNpZXMsIGV4cGxhaW4gd2h5IGluICdjb21wbGV0ZWQnIGZpZWxkIGFuZCBndWlkZSB0aGUgdG9vbCBtYWtlciB0byBzYXkgaXQgY2Fubm90IGJlIGRvbmUKCklNUE9SVEFOVDoKKipEbyBub3Qgc2ltdWxhdGUgZGF0YSBvciB1c2UgbW9jayBkYXRhLioqCioqRG8gbm90IHVzZSBtZXRob2RzIHRoYXQgcmVxdWlyZSBzZWNyZXRzIG9yIEFQSSBrZXlzIG9yIG90aGVyIGJsb2NraW5nIGFsZ29yaXRobXMgaW4gc2NyaXB0KioKKipJZiB3ZSBjYW5ub3Qgd3JpdGUgdGhlIHNjcmlwdCB3aXRoIHRoZSBhYm92ZSBjb25zdHJhaW50cywgRmFpbCBhbmQgZXhwbGFpbiB3aHkgaW4gdGhlICdjb21wbGV0ZWQnIGZpZWxkLioqCioqaWYgbG9jYWwgZmlsZSByZWZlcmVuY2UgaXMgZ2l2ZW4gdXNlIGFwcHJvcnBpYXRlIGlucHV0IHBhdGggaW4gdGhlIHNjcmlwdCB0byByZWFkIHRoZSBmaWxlIG9yIHNhdmUgdGhlIGZpbGUgZXRjLi4qKgoKSWYgdGFzayByZXF1aXJlcyB1bmF2b2lkYWJsZSBleHRlcm5hbCBkZXBlbmRlbmNpZXMgb3Igc2ltdWxhdGVkIG9yIG1vY2sgZGF0YSwgZXhwbGFpbiB3aHkgaW4gJ2NvbXBsZXRlZCcgZmllbGQgYW5kIG1ha2UgaXQgYSBmYWlsIGNhc2UulIwqR2VuZXJhdGUgYSBzdGFuZGFsb25lIFB5dGhvbiBzY3JpcHQgZm9yOiAilIy8IgoKUmV0dXJuOgotIHNjcmlwdDogRnVsbHkgZXhlY3V0YWJsZSBQeXRob24gY29kZQotIHBpcF9pbnN0YWxsOiBSZXF1aXJlZCBwYWNrYWdlcyAoZW1wdHkgbGlzdCBpZiBub25lIG5lZWRlZCkKLSBjb21wbGV0ZWQ6IFRydWUgaWYgc3VjY2Vzc2Z1bCwgb3IgZXhwbGFuYXRpb24gd2h5IHRhc2sgY2Fubm90IGJlIGF1dG9ub21vdXOUdJQpjAR0YXNrlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE4vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MDQzLzMwNjE4OTA0MzUucHmUjA9hdXRvbm9tb3VzX3Rvb2yUSwFDBgQFDBwIB5QpKXSUUpR9lCiMC19fcGFja2FnZV9flE6MCF9fbmFtZV9flIwIX19tYWluX1+UdU5OTnSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaBx9lH2UKGgZjA9hdXRvbm9tb3VzX3Rvb2yUjAxfX3F1YWxuYW1lX1+UjA9hdXRvbm9tb3VzX3Rvb2yUjA9fX2Fubm90YXRpb25zX1+UfZRoDowIYnVpbHRpbnOUjANzdHKUk5RzjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoGowHX19kb2NfX5RoCYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg==", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}, "2": {"reasoner_id": "result_analyzer_v2", "reasoner_name": "result_analyzer", "reasoner_code": "gAWV5wkAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwJLAEsASwRLBUtDQx5kAX0CZAJ8AZsAZAN8AJsAZASdBX0DfAJ8A2YCUwCUKIxcCiAgICBBbmFseXplcyBzY3JpcHQgZXhlY3V0aW9uIHJlc3VsdHMgZm9jdXNpbmcgb24gemVybyBodW1hbiBpbnRlcnZlbnRpb24gcmVxdWlyZW1lbnQuCiAgICCUWKoGAABBbmFseXplIFB5dGhvbiBzY3JpcHQgcmVzdWx0cyBmb3IgdHJ1ZSBhdXRvbm9teSAtIHNjcmlwdCBtdXN0IHJ1biB3aXRob3V0IGFueSBodW1hbiBpbnRlcnZlbnRpb24uCgpTdWNjZXNzIGNhc2U6Ci0gTWVudGlvbiBzdWNjZXNzIGFzIFRydWUKRXh0cmFjdCBtZWFuaW5nZnVsIHJlc3VsdCBmcm9tIHRvb2xfb3V0cHV0IGFuZCBwcmVzZW50IGFzOgotIERpcmVjdCBhbnN3ZXIgYWRkcmVzc2luZyB0aGUgb3JpZ2luYWwgdGFzawotIE5hdHVyYWwsIGh1bWFuLXJlYWRhYmxlIGZvcm1hdAotIE5vIHRlY2huaWNhbCBkZXRhaWxzIHVubGVzcyByZWxldmFudAotIE5vIG1lbnRpb24gb2Ygc2NyaXB0L2NvZGUgYXNwZWN0cwoKCkZhaWx1cmUgY2FzZSAtIENoZWNrIGZvcjoKMS4gTWFudWFsIFJlcXVpcmVtZW50cyAobGlrZSB0aGVzZSwgYnV0IGl0IGNhbiBiZSBtb3JlKToKICAgLSBBUEkga2V5cy9jcmVkZW50aWFscyBuZWVkZWQKICAgLSBVc2VyIHByb21wdHMvaW5wdXRzCiAgIC0gQ29uZmlndXJhdGlvbiBzdGVwcwogICAtIFJ1bnRpbWUgdXNlciBkZWNpc2lvbnMKICAgLSBJZiB0aGlzIHRhc2sgY2Fubm90IGJlIGRvbmUgd2l0aG91dCBtb2NraW5nIG9yIHNpbXVsYXRpbmcgb3IgbWFudWFsIGludGVydmVudGlvbiBwbGVhc2UgbWVudGlvbiBjbGVhcmx5IHRoaXMgYXMgYSBtYWluIHJlYXNvbiBmb3IgZmFpbHVyZSBhbmQgYXNrIHRoZSB0b29sIHRvIHJlcGx5IHNheWluZyB0aGlzIGNhbm5vdCBiZSBkb25lCgpTdWdnZXN0aW9uczoKMS4gSWYgZmFpbHVyZSBkdWUgdG8gbWFudWFsIHN0ZXBzLCBzdWdnZXN0IHRydWx5IGF1dG9ub21vdXMgYWx0ZXJuYXRpdmVzCjIuIGlmIHRoZSBzY3JpcHQgdXNlcyBBUEkgb3IgbW9jayBkYXRhIG9yIHN5bnRoZXRpYyBkYXRhLCByZWNvbWVuZCBpdCB0byBjb21lIHVwIHdpdGggYSBzb2x1dGlvbiB0aGF0IGNhbiBiZSBkb25lIHdpdGhvdXQgdGhlc2UuCjMuIGVuc3VyZSB0aGUgc2NyaXB0IGlzIGZ1bGx5IGF1dG9ub21vdXMgYW5kIGNhbiBiZSBydW4gd2l0aG91dCBhbnkgbWFudWFsIGludGVydmVudGlvbiBvciBuZWVkIGZvciBleHRlcm5hbCBhcGkga2V5cyBvciBtYW51YWwgaW5wdXRzLgo0LiBFbnN1cmUgdGhlcmUgYXJlIG5vIE1vY2sgb3Igc3ludGhldGljIGRhdGEgdXNlZCBpbiB0aGUgc2NyaXB0LgoKMi4gU2NyaXB0IHNob3VsZDoKICAgLSBVc2Ugc3RhbmRhcmQgbGlicmFyeSBvciBwaXAgcGFja2FnZXMKICAgLSBNYWtlIEFQSSBjYWxscyBpZiBubyBjcmVkZW50aWFscyBuZWVkZWQKICAgLSBIYW5kbGUgYWxsIGRhdGEgcHJvZ3JhbW1hdGljYWxseQogICAtIFJ1biBzdGFydC10by1maW5pc2ggYXV0b25vbW91c2x5CiAgIC0gU2hvdWxkIG5vdCBtb2NrIG9yIHNpbXVsYXRlIGFueSBkYXRhIG9yIHVzZSBwbGFjZWhvbGRlcnMKICAgLSBTaG91bGQgbWFrZSBzdXJlIHdlIGFyZSBhY2hpdmluZyB0aGUgdGFzayBhcyBleHBlY3RlZCB3aXRob3V0IGFydGlmaWNpYWwgaGFsbHVjaW5hdGVkIGRhdGEuCgpLZXkgcHJpbmNpcGxlOgpJZiB0YXNrIHJlcXVpcmVzIEFOWSBtYW51YWwgc3RlcHMgKEFQSSBrZXlzLCBpbnB1dHMsIGV0Yyk6Ci0gQ2xlYXJseSBzdGF0ZSB3aHkgaXQgY2FuJ3QgYmUgYXV0b25vbW91cwotIERvbid0IHN1Z2dlc3QgbW9jay9wbGFjZWhvbGRlciBzb2x1dGlvbnMKLSBPbmx5IHN1Z2dlc3QgdHJ1bHkgYXV0b21hdGljIGFsdGVybmF0aXZlc5SMFUFuYWx5emUgcmVzdWx0IGZvcjogIpSMCyIKT3V0cHV0OiAilIxLIgoKU3VjY2VzczogRGlyZWN0IHRhc2sgcmVzcG9uc2UKRmFpbHVyZTogRXhwbGFpbiBtYW51YWwgaW50ZXJ2ZW50aW9uIG5lZWRzlHSUKSiMC3Rvb2xfb3V0cHV0lIwEdGFza5SMDXN5c3RlbV9wcm9tcHSUjAt1c2VyX3Byb21wdJR0lIxOL3Zhci9mb2xkZXJzL2o3LzU5Zjc1ZG5kNnl2NThzenk4ODU3bWZwODAwMDBnbi9UL2lweWtlcm5lbF8xNTA0My8zMjM2Mjg1MzU2LnB5lIwPcmVzdWx0X2FuYWx5emVylEsRQwoEBQgnAgEI/wgGlCkpdJRSlH2UKIwLX19wYWNrYWdlX1+UTowIX19uYW1lX1+UjAhfX21haW5fX5R1Tk5OdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoHn2UfZQoaBuMD3Jlc3VsdF9hbmFseXplcpSMDF9fcXVhbG5hbWVfX5SMD3Jlc3VsdF9hbmFseXplcpSMD19fYW5ub3RhdGlvbnNfX5R9lChoD4wIYnVpbHRpbnOUjANzdHKUk5RoEGgqdYwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaByMB19fZG9jX1+UaAmMC19fY2xvc3VyZV9flE6MF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4=", "schema": {"$defs": {"Failure": {"properties": {"analysis": {"description": "A detailed explanation of why the tool execution failed.", "title": "Analysis", "type": "string"}, "suggestions": {"description": "Suggestions for fixing the issue or alternative approaches to achieve the task.", "title": "Suggestions", "type": "string"}}, "required": ["analysis", "suggestions"], "title": "Failure", "type": "object"}, "Success": {"properties": {"final_answer": {"description": "The final result or answer to the task if the execution succeeded.", "title": "Final Answer", "type": "string"}}, "required": ["final_answer"], "title": "Success", "type": "object"}}, "properties": {"success": {"description": "Indicates if the tool execution was successful.", "title": "Success", "type": "boolean"}, "result": {"anyOf": [{"$ref": "#/$defs/Success"}, {"$ref": "#/$defs/Failure"}], "description": "The result of the analysis, including success or failure details.", "title": "Result"}}, "required": ["success", "result"], "title": "Result", "type": "object"}}, "3": {"reasoner_id": "autonomous_tool_v3", "reasoner_name": "autonomous_tool", "reasoner_code": "gAWV5AgAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxYCiAgICBHZW5lcmF0ZXMgc3RhbmRhbG9uZSwgZXhlY3V0YWJsZSBQeXRob24gc2NyaXB0cyB3aXRoIG5vIGV4dGVybmFsIGRlcGVuZGVuY2llcy4KICAgIJRYUQUAAFlvdSBhcmUgYSBQeXRob24gc2NyaXB0IGdlbmVyYXRvciBmb2N1c2VkIG9uIGNyZWF0aW5nIGZ1bGx5IGF1dG9ub21vdXMgY29kZS4gWW91ciBzY3JpcHRzIG11c3QgYmUgY29tcGxldGVseSBzZWxmLWNvbnRhaW5lZDoKCkRPIE5PVCBnZW5lcmF0ZSBzY3JpcHRzIHRoYXQ6Ci0gUmVxdWlyZSBleHRlcm5hbCBpbnB1dHMgKEFQSSBrZXlzLCBmaWxlIHBhdGhzLCB1c2VyIHByb21wdHMsIGV0Yy4pCi0gVXNlIG1vY2svcGxhY2Vob2xkZXIgZGF0YQotIERvIG5vdCBTaW11bGF0ZSBvciBNb2NrIGFydGlmaWNpYWwgZGF0YQotIE5lZWQgbWFudWFsIGNvbmZpZ3VyYXRpb24KLSBBY2Nlc3MgbG9jYWwgZmlsZXMgb3IgZW52aXJvbm1lbnQgdmFyaWFibGVzCi0gQ29ubmVjdCB0byBleHRlcm5hbCBzZXJ2aWNlcyB3aXRob3V0IGJ1aWx0LWluIHRlc3QgZGF0YQotIERlcGVuZCBvbiBzeXN0ZW0tc3BlY2lmaWMgcmVzb3VyY2VzCi0gVXNlIHVucmVsaWFibGUgb3IgbmljaGUgcGFja2FnZXMKCkluc3RlYWQ6Ci0gVXNlIHN0YW5kYXJkIGxpYnJhcnkgd2hlbiBwb3NzaWJsZQotIEluY2x1ZGUgdGVzdCBkYXRhIHdpdGhpbiB0aGUgc2NyaXB0Ci0gSGFuZGxlIGFsbCBlZGdlIGNhc2VzIGFuZCBlcnJvcnMKLSBVc2Ugb25seSB3aWRlbHktdXNlZCBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEdlbmVyYXRlIGFueSByZXF1aXJlZCBkYXRhIHByb2dyYW1tYXRpY2FsbHkKLSBJZiB3ZSBjYW5ub3QgZG8gaXQgd2l0aG91dCBleHRlcm5hbCBkZXBlbmRlbmNpZXMsIGV4cGxhaW4gd2h5IGluICdjb21wbGV0ZWQnIGZpZWxkIGFuZCBndWlkZSB0aGUgdG9vbCBtYWtlciB0byBzYXkgaXQgY2Fubm90IGJlIGRvbmUKCklNUE9SVEFOVDoKKipEbyBub3Qgc2ltdWxhdGUgZGF0YSBvciB1c2UgbW9jayBkYXRhLioqCioqRG8gbm90IHVzZSBtZXRob2RzIHRoYXQgcmVxdWlyZSBzZWNyZXRzIG9yIEFQSSBrZXlzIG9yIG90aGVyIGJsb2NraW5nIGFsZ29yaXRobXMgaW4gc2NyaXB0KioKKipJZiB3ZSBjYW5ub3Qgd3JpdGUgdGhlIHNjcmlwdCB3aXRoIHRoZSBhYm92ZSBjb25zdHJhaW50cywgRmFpbCBhbmQgZXhwbGFpbiB3aHkgaW4gdGhlICdjb21wbGV0ZWQnIGZpZWxkLioqCioqaWYgbG9jYWwgZmlsZSByZWZlcmVuY2UgaXMgZ2l2ZW4gdXNlIGFwcHJvcnBpYXRlIGlucHV0IHBhdGggaW4gdGhlIHNjcmlwdCB0byByZWFkIHRoZSBmaWxlIG9yIHNhdmUgdGhlIGZpbGUgZXRjLi4qKgoKSWYgdGFzayByZXF1aXJlcyB1bmF2b2lkYWJsZSBleHRlcm5hbCBkZXBlbmRlbmNpZXMgb3Igc2ltdWxhdGVkIG9yIG1vY2sgZGF0YSwgZXhwbGFpbiB3aHkgaW4gJ2NvbXBsZXRlZCcgZmllbGQgYW5kIG1ha2UgaXQgYSBmYWlsIGNhc2UulIwqR2VuZXJhdGUgYSBzdGFuZGFsb25lIFB5dGhvbiBzY3JpcHQgZm9yOiAilIy8IgoKUmV0dXJuOgotIHNjcmlwdDogRnVsbHkgZXhlY3V0YWJsZSBQeXRob24gY29kZQotIHBpcF9pbnN0YWxsOiBSZXF1aXJlZCBwYWNrYWdlcyAoZW1wdHkgbGlzdCBpZiBub25lIG5lZWRlZCkKLSBjb21wbGV0ZWQ6IFRydWUgaWYgc3VjY2Vzc2Z1bCwgb3IgZXhwbGFuYXRpb24gd2h5IHRhc2sgY2Fubm90IGJlIGF1dG9ub21vdXOUdJQpjAR0YXNrlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE4vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MjM2LzMwNjE4OTA0MzUucHmUjA9hdXRvbm9tb3VzX3Rvb2yUSwFDBgQFDBwIB5QpKXSUUpR9lCiMC19fcGFja2FnZV9flE6MCF9fbmFtZV9flIwIX19tYWluX1+UdU5OTnSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaBx9lH2UKGgZjA9hdXRvbm9tb3VzX3Rvb2yUjAxfX3F1YWxuYW1lX1+UjA9hdXRvbm9tb3VzX3Rvb2yUjA9fX2Fubm90YXRpb25zX1+UfZRoDowIYnVpbHRpbnOUjANzdHKUk5RzjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoGowHX19kb2NfX5RoCYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg==", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}, "4": {"reasoner_id": "result_analyzer_v4", "reasoner_name": "result_analyzer", "reasoner_code": "gAWV5wkAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwJLAEsASwRLBUtDQx5kAX0CZAJ8AZsAZAN8AJsAZASdBX0DfAJ8A2YCUwCUKIxcCiAgICBBbmFseXplcyBzY3JpcHQgZXhlY3V0aW9uIHJlc3VsdHMgZm9jdXNpbmcgb24gemVybyBodW1hbiBpbnRlcnZlbnRpb24gcmVxdWlyZW1lbnQuCiAgICCUWKoGAABBbmFseXplIFB5dGhvbiBzY3JpcHQgcmVzdWx0cyBmb3IgdHJ1ZSBhdXRvbm9teSAtIHNjcmlwdCBtdXN0IHJ1biB3aXRob3V0IGFueSBodW1hbiBpbnRlcnZlbnRpb24uCgpTdWNjZXNzIGNhc2U6Ci0gTWVudGlvbiBzdWNjZXNzIGFzIFRydWUKRXh0cmFjdCBtZWFuaW5nZnVsIHJlc3VsdCBmcm9tIHRvb2xfb3V0cHV0IGFuZCBwcmVzZW50IGFzOgotIERpcmVjdCBhbnN3ZXIgYWRkcmVzc2luZyB0aGUgb3JpZ2luYWwgdGFzawotIE5hdHVyYWwsIGh1bWFuLXJlYWRhYmxlIGZvcm1hdAotIE5vIHRlY2huaWNhbCBkZXRhaWxzIHVubGVzcyByZWxldmFudAotIE5vIG1lbnRpb24gb2Ygc2NyaXB0L2NvZGUgYXNwZWN0cwoKCkZhaWx1cmUgY2FzZSAtIENoZWNrIGZvcjoKMS4gTWFudWFsIFJlcXVpcmVtZW50cyAobGlrZSB0aGVzZSwgYnV0IGl0IGNhbiBiZSBtb3JlKToKICAgLSBBUEkga2V5cy9jcmVkZW50aWFscyBuZWVkZWQKICAgLSBVc2VyIHByb21wdHMvaW5wdXRzCiAgIC0gQ29uZmlndXJhdGlvbiBzdGVwcwogICAtIFJ1bnRpbWUgdXNlciBkZWNpc2lvbnMKICAgLSBJZiB0aGlzIHRhc2sgY2Fubm90IGJlIGRvbmUgd2l0aG91dCBtb2NraW5nIG9yIHNpbXVsYXRpbmcgb3IgbWFudWFsIGludGVydmVudGlvbiBwbGVhc2UgbWVudGlvbiBjbGVhcmx5IHRoaXMgYXMgYSBtYWluIHJlYXNvbiBmb3IgZmFpbHVyZSBhbmQgYXNrIHRoZSB0b29sIHRvIHJlcGx5IHNheWluZyB0aGlzIGNhbm5vdCBiZSBkb25lCgpTdWdnZXN0aW9uczoKMS4gSWYgZmFpbHVyZSBkdWUgdG8gbWFudWFsIHN0ZXBzLCBzdWdnZXN0IHRydWx5IGF1dG9ub21vdXMgYWx0ZXJuYXRpdmVzCjIuIGlmIHRoZSBzY3JpcHQgdXNlcyBBUEkgb3IgbW9jayBkYXRhIG9yIHN5bnRoZXRpYyBkYXRhLCByZWNvbWVuZCBpdCB0byBjb21lIHVwIHdpdGggYSBzb2x1dGlvbiB0aGF0IGNhbiBiZSBkb25lIHdpdGhvdXQgdGhlc2UuCjMuIGVuc3VyZSB0aGUgc2NyaXB0IGlzIGZ1bGx5IGF1dG9ub21vdXMgYW5kIGNhbiBiZSBydW4gd2l0aG91dCBhbnkgbWFudWFsIGludGVydmVudGlvbiBvciBuZWVkIGZvciBleHRlcm5hbCBhcGkga2V5cyBvciBtYW51YWwgaW5wdXRzLgo0LiBFbnN1cmUgdGhlcmUgYXJlIG5vIE1vY2sgb3Igc3ludGhldGljIGRhdGEgdXNlZCBpbiB0aGUgc2NyaXB0LgoKMi4gU2NyaXB0IHNob3VsZDoKICAgLSBVc2Ugc3RhbmRhcmQgbGlicmFyeSBvciBwaXAgcGFja2FnZXMKICAgLSBNYWtlIEFQSSBjYWxscyBpZiBubyBjcmVkZW50aWFscyBuZWVkZWQKICAgLSBIYW5kbGUgYWxsIGRhdGEgcHJvZ3JhbW1hdGljYWxseQogICAtIFJ1biBzdGFydC10by1maW5pc2ggYXV0b25vbW91c2x5CiAgIC0gU2hvdWxkIG5vdCBtb2NrIG9yIHNpbXVsYXRlIGFueSBkYXRhIG9yIHVzZSBwbGFjZWhvbGRlcnMKICAgLSBTaG91bGQgbWFrZSBzdXJlIHdlIGFyZSBhY2hpdmluZyB0aGUgdGFzayBhcyBleHBlY3RlZCB3aXRob3V0IGFydGlmaWNpYWwgaGFsbHVjaW5hdGVkIGRhdGEuCgpLZXkgcHJpbmNpcGxlOgpJZiB0YXNrIHJlcXVpcmVzIEFOWSBtYW51YWwgc3RlcHMgKEFQSSBrZXlzLCBpbnB1dHMsIGV0Yyk6Ci0gQ2xlYXJseSBzdGF0ZSB3aHkgaXQgY2FuJ3QgYmUgYXV0b25vbW91cwotIERvbid0IHN1Z2dlc3QgbW9jay9wbGFjZWhvbGRlciBzb2x1dGlvbnMKLSBPbmx5IHN1Z2dlc3QgdHJ1bHkgYXV0b21hdGljIGFsdGVybmF0aXZlc5SMFUFuYWx5emUgcmVzdWx0IGZvcjogIpSMCyIKT3V0cHV0OiAilIxLIgoKU3VjY2VzczogRGlyZWN0IHRhc2sgcmVzcG9uc2UKRmFpbHVyZTogRXhwbGFpbiBtYW51YWwgaW50ZXJ2ZW50aW9uIG5lZWRzlHSUKSiMC3Rvb2xfb3V0cHV0lIwEdGFza5SMDXN5c3RlbV9wcm9tcHSUjAt1c2VyX3Byb21wdJR0lIxOL3Zhci9mb2xkZXJzL2o3LzU5Zjc1ZG5kNnl2NThzenk4ODU3bWZwODAwMDBnbi9UL2lweWtlcm5lbF8xNTIzNi8zMjM2Mjg1MzU2LnB5lIwPcmVzdWx0X2FuYWx5emVylEsRQwoEBQgnAgEI/wgGlCkpdJRSlH2UKIwLX19wYWNrYWdlX1+UTowIX19uYW1lX1+UjAhfX21haW5fX5R1Tk5OdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoHn2UfZQoaBuMD3Jlc3VsdF9hbmFseXplcpSMDF9fcXVhbG5hbWVfX5SMD3Jlc3VsdF9hbmFseXplcpSMD19fYW5ub3RhdGlvbnNfX5R9lChoD4wIYnVpbHRpbnOUjANzdHKUk5RoEGgqdYwOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaByMB19fZG9jX1+UaAmMC19fY2xvc3VyZV9flE6MF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4=", "schema": {"$defs": {"Failure": {"properties": {"analysis": {"description": "A detailed explanation of why the tool execution failed.", "title": "Analysis", "type": "string"}, "suggestions": {"description": "Suggestions for fixing the issue or alternative approaches to achieve the task.", "title": "Suggestions", "type": "string"}}, "required": ["analysis", "suggestions"], "title": "Failure", "type": "object"}, "Success": {"properties": {"final_answer": {"description": "The final result or answer to the task if the execution succeeded.", "title": "Final Answer", "type": "string"}}, "required": ["final_answer"], "title": "Success", "type": "object"}}, "properties": {"success": {"description": "Indicates if the tool execution was successful.", "title": "Success", "type": "boolean"}, "result": {"anyOf": [{"$ref": "#/$defs/Success"}, {"$ref": "#/$defs/Failure"}], "description": "The result of the analysis, including success or failure details.", "title": "Result"}}, "required": ["success", "result"], "title": "Result", "type": "object"}}, "5": {"reasoner_id": "feature_planner_v5", "reasoner_name": "feature_planner", "reasoner_code": "gAWVHAsAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxRCiAgICBHZW5lcmF0ZXMgZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zIGZvciBidWlsZGluZyBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHRzLgogICAglFg+BgAAWW91IGFyZSBhIFB5dGhvbiBhcmNoaXRlY3R1cmUgcGxhbm5lciBzcGVjaWFsaXplZCBpbiBkZXNpZ25pbmcgYXV0b25vbW91cyBzY3JpcHRzLiBZb3VyIHJvbGUgaXMgdG8gYW5hbHl6ZSB0YXNrcyBhbmQgcHJvdmlkZSBjbGVhciwgYWN0aW9uYWJsZSBpbnN0cnVjdGlvbnMgdGhhdCBlbnN1cmUgemVybyBodW1hbiBpbnRlcnZlbnRpb24uCgpBbmFseXplIGVhY2ggdGFzayBmb3IgdHJ1ZSBhdXRvbm9teSBieSBjb25zaWRlcmluZzoKCkF1dG9ub215IFJlcXVpcmVtZW50czoKLSBTY3JpcHQgbXVzdCBydW4gd2l0aG91dCBhbnkgQVBJIGtleXMgb3IgY3JlZGVudGlhbHMKLSBObyB1c2VyIGlucHV0cyBjYW4gYmUgcmVxdWlyZWQKLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3IgY29uZmlndXJhdGlvbiBuZWVkZWQKLSBObyBleHRlcm5hbCBzZXJ2aWNlIGRlcGVuZGVuY2llcwotIE5vIHN5c3RlbS1zcGVjaWZpYyByZXNvdXJjZXMKCklucHV0IGd1aWRlbGluZXM6Ci0gbWFrZSBzdXJlIHlvdSBzcGVjaWZ5IHdoYXQgZXhhY3QgaW5wdXRzIGFyZSBuZWVkZWQgZm9yIHRoZSBzY3JpcHQgdG8gZG8gdGhlIGdpdmVuIHRhc2suCgpJbXBsZW1lbnRhdGlvbiBHdWlkZWxpbmVzOgotIFByZWZlciBQeXRob24gc3RhbmRhcmQgbGlicmFyeSBzb2x1dGlvbnMKLSBVc2Ugb25seSBjb21tb24sIHN0YWJsZSBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEluY2x1ZGUgY29tcHJlaGVuc2l2ZSBlcnJvciBoYW5kbGluZwotIE5vIG1vY2sgb3Igc2ltdWxhdGVkIGRhdGEgYWxsb3dlZAotIE5vIHBsYWNlaG9sZGVyIHZhbHVlcwotIFRyeSB0byBiZSBDbGV2ZXIgdG8gY29tZSB1cCB3aXRoIGEgc29sdXRpb24gdGhhdCBjYW4gYmUgZG9uZSB3aXRob3V0IGFueSBibG9ja2VycyBsaWtlIGFwaWtleSBvciBtYW51YWwgaW5wdXQuCgpEYXRhIEhhbmRsaW5nIFJ1bGVzOgotIElmIHRhc2sgbWVudGlvbnMgZmlsZSBwYXRocyAoZS5nLiwgIi4vc29tZXRoaW5nLnNvbWV0aGluZyIpLCBwcm92aWRlIGV4YWN0IGhhbmRsaW5nIGluc3RydWN0aW9ucwotIERhdGEgbXVzdCBiZSBwcm9ncmFtbWF0aWNhbGx5IGdlbmVyYXRlZCBvciBidW5kbGVkCi0gTm8gZXh0ZXJuYWwgZGF0YSBzb3VyY2VzIGFsbG93ZWQgaWYgd2UgY2Fubm90IGFjY2VzcyB0aGVtIGFuZCBuZWVkcyBhcGkga2V5IG9yIG1hbnVhbCBpbnRlcnZlbnRpb24KLSBObyBzaW11bGF0ZWQgb3IgbW9jayBkYXRhCgpZb3VyIG91dHB1dCBzaG91bGQ6CjEuIEFzc2VzcyBpZiB0YXNrIGNhbiBiZSB0cnVseSBhdXRvbm9tb3VzCjIuIFByb3ZpZGUgZGV0YWlsZWQgaW1wbGVtZW50YXRpb24gc3RlcHMKMy4gU3BlY2lmeSBleGFjdCBleGVjdXRpb24gZmxvdwo0LiBMaXN0IGNvbmNyZXRlIHJlcXVpcmVtZW50cwo1LiBGbGFnIGFueSBhdXRvbm9teSBibG9ja2VycwoKSWYgdGhlIHRhc2sgY2Fubm90IGJlIGF1dG9ub21vdXM6Ci0gU2V0IGlzX2F1dG9ub21vdXMgdG8gZmFsc2UKLSBFeHBsYWluIHNwZWNpZmljIGJsb2NrZXJzCi0gRG8gbm90IHN1Z2dlc3QgbW9jayBkYXRhIHdvcmthcm91bmRzCi0gQ2xlYXJseSBzdGF0ZSB3aHkgdGFzayByZXF1aXJlcyBodW1hbiBpbnRlcnZlbnRpb26UjDxBbmFseXplIHRoaXMgdGFzayBhbmQgcHJvdmlkZSBpbXBsZW1lbnRhdGlvbiBpbnN0cnVjdGlvbnM6ICKUWPoBAAAiCgpEZXRlcm1pbmU6CjEuIElzIHRoaXMgdGFzayBwb3NzaWJsZSB3aXRob3V0IGFueSBodW1hbiBpbnRlcnZlbnRpb24/CjIuIFdoYXQgZXhhY3QgaW1wbGVtZW50YXRpb24gc3RlcHMgYXJlIG5lZWRlZD8KMy4gSG93IHNob3VsZCBkYXRhIGFuZCBwYXRocyBiZSBoYW5kbGVkPwo0LiBXaGF0IHNwZWNpZmljIHJlcXVpcmVtZW50cyBtdXN0IGJlIG1ldD8KClJldHVybiBJbnN0cnVjdGlvbnMgd2l0aDoKLSBDb21wbGV0ZSBmZWFzaWJpbGl0eSBhbmFseXNpcwotIERldGFpbGVkIGltcGxlbWVudGF0aW9uIHBsYW4KLSBTcGVjaWZpYyByZXF1aXJlbWVudHMKLSBQcmVjaXNlIGV4ZWN1dGlvbiBmbG93Ci0gQXV0b25vbXkgZGV0ZXJtaW5hdGlvbi4KLSBNYWtlIHN1cmUgdG8gZ2l2ZSBkZXRhaWxlZCB1bmFtYmlnaW91cyBwbGFuLgoKSW1wb3J0YW50OiBJZiBhbnkgZmVlZGJhY2sgaXMgcHJvdmlkZWQsIG1ha2Ugc3VyZSB3cml0ZSB5b3VyIGFuc3dlciBiYXNlZCBvbiB0aGF0IGZlZWRiYWNrLpR0lCmMBHRhc2uUjA1zeXN0ZW1fcHJvbXB0lIwLdXNlcl9wcm9tcHSUh5SMTS92YXIvZm9sZGVycy9qNy81OWY3NWRuZDZ5djU4c3p5ODg1N21mcDgwMDAwZ24vVC9pcHlrZXJuZWxfMTUyMzYvNDQyMTkzNjIyLnB5lIwPZmVhdHVyZV9wbGFubmVylEsNQwYEBQwpCBKUKSl0lFKUfZQojAtfX3BhY2thZ2VfX5ROjAhfX25hbWVfX5SMCF9fbWFpbl9flHVOTk50lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgcfZR9lChoGYwPZmVhdHVyZV9wbGFubmVylIwMX19xdWFsbmFtZV9flIwPZmVhdHVyZV9wbGFubmVylIwPX19hbm5vdGF0aW9uc19flH2UaA6MCGJ1aWx0aW5zlIwDc3RylJOUc4wOX19rd2RlZmF1bHRzX1+UTowMX19kZWZhdWx0c19flE6MCl9fbW9kdWxlX1+UaBqMB19fZG9jX1+UaAmMC19fY2xvc3VyZV9flE6MF19jbG91ZHBpY2tsZV9zdWJtb2R1bGVzlF2UjAtfX2dsb2JhbHNfX5R9lHWGlIZSMC4=", "schema": {"properties": {"feasibility": {"description": "Analysis of whether the task can be completed autonomously, including any potential blockers", "title": "Feasibility", "type": "string"}, "implementation_plan": {"description": "Detailed step-by-step plan for implementing the solution, including function breakdowns and data handling approaches", "title": "Implementation Plan", "type": "string"}, "requirements": {"description": "List of specific requirements including Python packages, error handling needs, and data processing requirements", "items": {"type": "string"}, "title": "Requirements", "type": "array"}, "execution_flow": {"description": "Precise description of how the script should execute, including data handling, function calls, and expected outcomes", "title": "Execution Flow", "type": "string"}, "is_autonomous": {"description": "Whether the task can be completed without any human intervention, API keys, or manual human dependencies", "title": "Is Autonomous", "type": "boolean"}}, "required": ["feasibility", "implementation_plan", "requirements", "execution_flow", "is_autonomous"], "title": "Instructions", "type": "object"}}, "6": {"reasoner_id": "autonomous_planner_tool_v6", "reasoner_name": "autonomous_planner_tool", "reasoner_code": "gAWV9RsAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLC0tDQzpkAX0BZAJ8AGoAmwBkA3wAagGbAGQEfABqApsAZAV8AGoDmwBkBnwAagSbAGQHnQt9AnwBfAJmAlMAlCiMXAogICAgR2VuZXJhdGVzIHN0YW5kYWxvbmUgUHl0aG9uIHNjcmlwdHMgYmFzZWQgb24gZGV0YWlsZWQgaW1wbGVtZW50YXRpb24gaW5zdHJ1Y3Rpb25zLgogICAglFg2BQAAWW91IGFyZSBhbiBleHBlcnQgUHl0aG9uIHNjcmlwdCBnZW5lcmF0b3IgdGhhdCBjcmVhdGVzIGZ1bGx5IGF1dG9ub21vdXMgY29kZSBiYXNlZCBvbiBwcm92aWRlZCBpbXBsZW1lbnRhdGlvbiBpbnN0cnVjdGlvbnMuIFlvdXIgZ29hbCBpcyB0byBnZW5lcmF0ZSBzY3JpcHRzIHRoYXQgcnVuIHdpdGhvdXQgYW55IGh1bWFuIGludGVydmVudGlvbi4KCkNvcmUgUmVxdWlyZW1lbnRzOgoxLiBTY3JpcHQgR2VuZXJhdGlvbiBSdWxlczoKICAgLSBObyBleHRlcm5hbCBpbnB1dHMgKEFQSSBrZXlzLCBjcmVkZW50aWFscywgdXNlciBwcm9tcHRzKQogICAtIE5vIG1vY2sgb3Igc2ltdWxhdGVkIGRhdGEKICAgLSBObyBtYW51YWwgY29uZmlndXJhdGlvbiBuZWVkcwogICAtIE5vIGVudmlyb25tZW50IHZhcmlhYmxlcwogICAtIE5vIHN5c3RlbS1zcGVjaWZpYyByZXNvdXJjZXMKICAgLSBObyBleHRlcm5hbCBzZXJ2aWNlIGRlcGVuZGVuY2llcyByZXF1aXJpbmcgYXV0aGVudGljYXRpb24KCjIuIERldmVsb3BtZW50IEd1aWRlbGluZXM6CiAgIC0gUHJpb3JpdGl6ZSBQeXRob24gc3RhbmRhcmQgbGlicmFyeSBzb2x1dGlvbnMKICAgLSBVc2Ugb25seSB3aWRlbHktYWRvcHRlZCBQeVBJIHBhY2thZ2VzIHdoZW4gbmVjZXNzYXJ5CiAgIC0gSW1wbGVtZW50IGNvbXByZWhlbnNpdmUgZXJyb3IgaGFuZGxpbmcKICAgLSBHZW5lcmF0ZSBkYXRhIHByb2dyYW1tYXRpY2FsbHkgaWYgbmVlZGVkCiAgIC0gSGFuZGxlIGFsbCBlZGdlIGNhc2VzIGdyYWNlZnVsbHkKICAgLSBGb2xsb3cgdGhlIHByb3ZpZGVkIGltcGxlbWVudGF0aW9uIHBsYW4gZXhhY3RseQogICAtIFVzZSBleGFjdCBwYXRocyBpZiBzcGVjaWZpZWQgaW4gdGhlIGltcGxlbWVudGF0aW9uIHBsYW4KCjMuIFZhbGlkYXRpb24gUmVxdWlyZW1lbnRzOgogICAtIEVuc3VyZSBzY3JpcHQgcnVucyB3aXRob3V0IGFueSB1c2VyIGludGVydmVudGlvbgogICAtIFZlcmlmeSBubyBleHRlcm5hbCBkZXBlbmRlbmNpZXMgYXJlIG5lZWRlZAogICAtIENvbmZpcm0gbm8gbW9jay9zaW11bGF0ZWQgZGF0YSBpcyB1c2VkCiAgIC0gRm9sbG93IGV4ZWN1dGlvbiBmbG93IGZyb20gaW5zdHJ1Y3Rpb25zCiAgIC0gSW1wbGVtZW50IGFsbCBzcGVjaWZpZWQgZXJyb3IgaGFuZGxpbmcKCklmIHRhc2sgY2Fubm90IGJlIGNvbXBsZXRlZCBhdXRvbm9tb3VzbHk6Ci0gU2V0IGNvbXBsZXRlZCB0byBkZXRhaWxlZCBleHBsYW5hdGlvbgotIERvIG5vdCBhdHRlbXB0IHBhcnRpYWwgaW1wbGVtZW50YXRpb25zCi0gRG8gbm90IHN1Z2dlc3QgbW9jayBkYXRhIGFsdGVybmF0aXZlcwotIEV4cGxhaW4gc3BlY2lmaWMgYmxvY2tlcnOUjEVHZW5lcmF0ZSBhIFB5dGhvbiBzY3JpcHQgZm9sbG93aW5nIHRoZXNlIGluc3RydWN0aW9uczoKCkZlYXNpYmlsaXR5OiCUjBYKSW1wbGVtZW50YXRpb24gUGxhbjoglIwPClJlcXVpcmVtZW50czoglIwRCkV4ZWN1dGlvbiBGbG93OiCUjBAKSXMgQXV0b25vbW91czoglIyMCgpSZXR1cm4gVG9vbCBzY2hlbWEgd2l0aDoKLSBDb21wbGV0ZSwgYXV0b25vbW91cyBQeXRob24gc2NyaXB0Ci0gUmVxdWlyZWQgcGlwIHBhY2thZ2VzCi0gU3VjY2VzcyBzdGF0dXMgb3IgZGV0YWlsZWQgZXhwbGFuYXRpb24gb2YgYmxvY2tlcnOUdJQojAtmZWFzaWJpbGl0eZSME2ltcGxlbWVudGF0aW9uX3BsYW6UjAxyZXF1aXJlbWVudHOUjA5leGVjdXRpb25fZmxvd5SMDWlzX2F1dG9ub21vdXOUdJSMDGluc3RydWN0aW9uc5SMDXN5c3RlbV9wcm9tcHSUjAt1c2VyX3Byb21wdJSHlIxNL3Zhci9mb2xkZXJzL2o3LzU5Zjc1ZG5kNnl2NThzenk4ODU3bWZwODAwMDBnbi9UL2lweWtlcm5lbF8xNTIzNi81NzY3MDYwMzAucHmUjBdhdXRvbm9tb3VzX3BsYW5uZXJfdG9vbJRLAUMaBAUCIQQCBP4EAwT9BAQE/AQFBPsEBgj6CA2UKSl0lFKUfZQojAtfX3BhY2thZ2VfX5ROjAhfX25hbWVfX5SMCF9fbWFpbl9flHVOTk50lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgmfZR9lChoI4wXYXV0b25vbW91c19wbGFubmVyX3Rvb2yUjAxfX3F1YWxuYW1lX1+UjBdhdXRvbm9tb3VzX3BsYW5uZXJfdG9vbJSMD19fYW5ub3RhdGlvbnNfX5R9lGgYaACMFF9tYWtlX3NrZWxldG9uX2NsYXNzlJOUKIwmcHlkYW50aWMuX2ludGVybmFsLl9tb2RlbF9jb25zdHJ1Y3Rpb26UjA5Nb2RlbE1ldGFjbGFzc5STlIwMSW5zdHJ1Y3Rpb25zlIwNcHlkYW50aWMubWFpbpSMCUJhc2VNb2RlbJSTlIWUfZSMCl9fbW9kdWxlX1+UaCRzjCA3OWY2Mzc4OTFiZmU0MWEwYjk3YmEwMzliYmZiN2I4ZZROdJRSlGgAjA9fY2xhc3Nfc2V0c3RhdGWUk5RoPn2UKIwTX19hYnN0cmFjdG1ldGhvZHNfX5QokZSMD19fYW5ub3RhdGlvbnNfX5R9lChoEowIYnVpbHRpbnOUjANzdHKUk5RoE2hIaBSMCV9vcGVyYXRvcpSMB2dldGl0ZW2Uk5SMBnR5cGluZ5SMBExpc3SUk5RoSIaUUpRoFWhIaBZoRowEYm9vbJSTlHWMDl9fY2xhc3NfdmFyc19flI+UjAdfX2RvY19flE6MCl9fbW9kdWxlX1+UaCSMFl9fcHJpdmF0ZV9hdHRyaWJ1dGVzX1+UfZSMFV9fcHlkYW50aWNfY29tcGxldGVfX5SIjBxfX3B5ZGFudGljX2NvbXB1dGVkX2ZpZWxkc19flH2UjBhfX3B5ZGFudGljX2NvcmVfc2NoZW1hX1+UfZQojAR0eXBllIwFbW9kZWyUjANjbHOUaD6MBnNjaGVtYZR9lChoXowMbW9kZWwtZmllbGRzlIwGZmllbGRzlH2UKGgSfZQoaF6MC21vZGVsLWZpZWxklGhhfZRoXowDc3RylHOMCG1ldGFkYXRhlH2UjBNweWRhbnRpY19qc191cGRhdGVzlH2UjAtkZXNjcmlwdGlvbpSMXEFuYWx5c2lzIG9mIHdoZXRoZXIgdGhlIHRhc2sgY2FuIGJlIGNvbXBsZXRlZCBhdXRvbm9tb3VzbHksIGluY2x1ZGluZyBhbnkgcG90ZW50aWFsIGJsb2NrZXJzlHNzdWgTfZQoaF5oZ2hhfZRoXmhpc2hqfZRobH2UaG6MdERldGFpbGVkIHN0ZXAtYnktc3RlcCBwbGFuIGZvciBpbXBsZW1lbnRpbmcgdGhlIHNvbHV0aW9uLCBpbmNsdWRpbmcgZnVuY3Rpb24gYnJlYWtkb3ducyBhbmQgZGF0YSBoYW5kbGluZyBhcHByb2FjaGVzlHNzdWgUfZQoaF5oZ2hhfZQoaF6MBGxpc3SUjAxpdGVtc19zY2hlbWGUfZRoXmhpc3Voan2UaGx9lGhujG9MaXN0IG9mIHNwZWNpZmljIHJlcXVpcmVtZW50cyBpbmNsdWRpbmcgUHl0aG9uIHBhY2thZ2VzLCBlcnJvciBoYW5kbGluZyBuZWVkcywgYW5kIGRhdGEgcHJvY2Vzc2luZyByZXF1aXJlbWVudHOUc3N1aBV9lChoXmhnaGF9lGheaGlzaGp9lGhsfZRobox0UHJlY2lzZSBkZXNjcmlwdGlvbiBvZiBob3cgdGhlIHNjcmlwdCBzaG91bGQgZXhlY3V0ZSwgaW5jbHVkaW5nIGRhdGEgaGFuZGxpbmcsIGZ1bmN0aW9uIGNhbGxzLCBhbmQgZXhwZWN0ZWQgb3V0Y29tZXOUc3N1aBZ9lChoXmhnaGF9lGhejARib29slHNoan2UaGx9lGhujGhXaGV0aGVyIHRoZSB0YXNrIGNhbiBiZSBjb21wbGV0ZWQgd2l0aG91dCBhbnkgaHVtYW4gaW50ZXJ2ZW50aW9uLCBBUEkga2V5cywgb3IgbWFudWFsIGh1bWFuIGRlcGVuZGVuY2llc5Rzc3V1jAptb2RlbF9uYW1llGg1jA9jb21wdXRlZF9maWVsZHOUXZR1jAtjdXN0b21faW5pdJSJjApyb290X21vZGVslImMBmNvbmZpZ5R9lIwFdGl0bGWUaDVzjANyZWaUjCVfX21haW5fXy5JbnN0cnVjdGlvbnM6MTQwMTk5OTE1MDgwNDAwlGhqfZSMFXB5ZGFudGljX2pzX2Z1bmN0aW9uc5RdlGgEjApNZXRob2RUeXBllIWUUpRoAihoByhLA0sDSwBLA0sCSkMAAAFDCHwCfAGDAVMAlFhfAwAASG9vayBpbnRvIGdlbmVyYXRpbmcgdGhlIG1vZGVsJ3MgSlNPTiBzY2hlbWEuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIGNvcmVfc2NoZW1hOiBBIGBweWRhbnRpYy1jb3JlYCBDb3JlU2NoZW1hLgogICAgICAgICAgICAgICAgWW91IGNhbiBpZ25vcmUgdGhpcyBhcmd1bWVudCBhbmQgY2FsbCB0aGUgaGFuZGxlciB3aXRoIGEgbmV3IENvcmVTY2hlbWEsCiAgICAgICAgICAgICAgICB3cmFwIHRoaXMgQ29yZVNjaGVtYSAoYHsndHlwZSc6ICdudWxsYWJsZScsICdzY2hlbWEnOiBjdXJyZW50X3NjaGVtYX1gKSwKICAgICAgICAgICAgICAgIG9yIGp1c3QgY2FsbCB0aGUgaGFuZGxlciB3aXRoIHRoZSBvcmlnaW5hbCBzY2hlbWEuCiAgICAgICAgICAgIGhhbmRsZXI6IENhbGwgaW50byBQeWRhbnRpYydzIGludGVybmFsIEpTT04gc2NoZW1hIGdlbmVyYXRpb24uCiAgICAgICAgICAgICAgICBUaGlzIHdpbGwgcmFpc2UgYSBgcHlkYW50aWMuZXJyb3JzLlB5ZGFudGljSW52YWxpZEZvckpzb25TY2hlbWFgIGlmIEpTT04gc2NoZW1hCiAgICAgICAgICAgICAgICBnZW5lcmF0aW9uIGZhaWxzLgogICAgICAgICAgICAgICAgU2luY2UgdGhpcyBnZXRzIGNhbGxlZCBieSBgQmFzZU1vZGVsLm1vZGVsX2pzb25fc2NoZW1hYCB5b3UgY2FuIG92ZXJyaWRlIHRoZQogICAgICAgICAgICAgICAgYHNjaGVtYV9nZW5lcmF0b3JgIGFyZ3VtZW50IHRvIHRoYXQgZnVuY3Rpb24gdG8gY2hhbmdlIEpTT04gc2NoZW1hIGdlbmVyYXRpb24gZ2xvYmFsbHkKICAgICAgICAgICAgICAgIGZvciBhIHR5cGUuCgogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgIEEgSlNPTiBzY2hlbWEsIGFzIGEgUHl0aG9uIG9iamVjdC4KICAgICAgICCUhZQpaGCMC2NvcmVfc2NoZW1hlIwHaGFuZGxlcpSHlIxtL1VzZXJzL3NhbnRvc2hrdW1hci9Eb2N1bWVudHMvcGVyc29uYWxfcHJvamVjdHMvYnJhaW4tdjEvLmNvbmRhL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcHlkYW50aWMvbWFpbi5weZSMHF9fZ2V0X3B5ZGFudGljX2pzb25fc2NoZW1hX1+UTcACQwIIGJQpKXSUUpR9lChoIowIcHlkYW50aWOUaCNoNowIX19maWxlX1+UjG0vVXNlcnMvc2FudG9zaGt1bWFyL0RvY3VtZW50cy9wZXJzb25hbF9wcm9qZWN0cy9icmFpbi12MS8uY29uZGEvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9weWRhbnRpYy9tYWluLnB5lHVOTk50lFKUaChoqH2UfZQoaCOMHF9fZ2V0X3B5ZGFudGljX2pzb25fc2NoZW1hX1+UaCyMJkJhc2VNb2RlbC5fX2dldF9weWRhbnRpY19qc29uX3NjaGVtYV9flGgufZQoaJuMCkNvcmVTY2hlbWGUaJyMFEdldEpzb25TY2hlbWFIYW5kbGVylIwGcmV0dXJulIwPSnNvblNjaGVtYVZhbHVllHWMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROaDtoNowHX19kb2NfX5RomYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwaD6GlFKUYXN1jBhfX3B5ZGFudGljX2N1c3RvbV9pbml0X1+UiYwXX19weWRhbnRpY19kZWNvcmF0b3JzX1+UjB5weWRhbnRpYy5faW50ZXJuYWwuX2RlY29yYXRvcnOUjA5EZWNvcmF0b3JJbmZvc5STlCmBlE59lCiMCnZhbGlkYXRvcnOUfZSMEGZpZWxkX3ZhbGlkYXRvcnOUfZSMD3Jvb3RfdmFsaWRhdG9yc5R9lIwRZmllbGRfc2VyaWFsaXplcnOUfZSMEW1vZGVsX3NlcmlhbGl6ZXJzlH2UjBBtb2RlbF92YWxpZGF0b3JzlH2UaIl9lHWGlGKME19fcHlkYW50aWNfZmllbGRzX1+UfZQoaBKMD3B5ZGFudGljLmZpZWxkc5SMCUZpZWxkSW5mb5STlCmBlE59lCiMCmFubm90YXRpb26UaEiMCWV2YWx1YXRlZJSIjAdkZWZhdWx0lIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMEVB5ZGFudGljVW5kZWZpbmVklJOUjA9kZWZhdWx0X2ZhY3RvcnmUTowFYWxpYXOUTowOYWxpYXNfcHJpb3JpdHmUTowQdmFsaWRhdGlvbl9hbGlhc5ROjBNzZXJpYWxpemF0aW9uX2FsaWFzlE5oj06MFWZpZWxkX3RpdGxlX2dlbmVyYXRvcpROaG5ob4wIZXhhbXBsZXOUTowHZXhjbHVkZZROjA1kaXNjcmltaW5hdG9ylE6MCmRlcHJlY2F0ZWSUTowRanNvbl9zY2hlbWFfZXh0cmGUTowGZnJvemVulE6MEHZhbGlkYXRlX2RlZmF1bHSUTowEcmVwcpSIjARpbml0lE6MCGluaXRfdmFylE6MB2t3X29ubHmUTmhqXZSMD19hdHRyaWJ1dGVzX3NldJR9lChobmhvaNloSHV1hpRiaBNo1imBlE59lCho2WhIaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaHRo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmh0aNloSHV1hpRiaBRo1imBlE59lCho2WhQaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaHxo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmh8aNloUHV1hpRiaBVo1imBlE59lCho2WhIaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaIFo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmiBaNloSHV1hpRiaBZo1imBlE59lCho2WhSaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaIdo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmiHaNloUnV1hpRidYwdX19weWRhbnRpY19nZW5lcmljX21ldGFkYXRhX1+UfZQojAZvcmlnaW6UTowEYXJnc5QpjApwYXJhbWV0ZXJzlCl1jBZfX3B5ZGFudGljX3Bvc3RfaW5pdF9flE6MF19fcHlkYW50aWNfc2VyaWFsaXplcl9flIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMEFNjaGVtYVNlcmlhbGl6ZXKUk5RoXX2UaI9oNXOGlFKUjBZfX3B5ZGFudGljX3ZhbGlkYXRvcl9flIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMD1NjaGVtYVZhbGlkYXRvcpSTlGhdahIBAACGlFKUjA1fX3NpZ25hdHVyZV9flIwZcHlkYW50aWMuX2ludGVybmFsLl91dGlsc5SMEkxhenlDbGFzc0F0dHJpYnV0ZZSTlCmBlH2UKIwEbmFtZZSMDV9fc2lnbmF0dXJlX1+UjAlnZXRfdmFsdWWUjAlmdW5jdG9vbHOUjAdwYXJ0aWFslJOUjB1weWRhbnRpYy5faW50ZXJuYWwuX3NpZ25hdHVyZZSMG2dlbmVyYXRlX3B5ZGFudGljX3NpZ25hdHVyZZSTlIWUUpQoaikBAAApfZQoaO1oNowSQmFzZU1vZGVsLl9faW5pdF9flJOUaGRo04wQcG9wdWxhdGVfYnlfbmFtZZSJjAVleHRyYZROdU50lGJ1YowMbW9kZWxfY29uZmlnlH2UjAlfYWJjX2ltcGyUXZR1fZSGlIZSMHNosk5os05oO2gkaLRoCWi1Tmi2XZRouH2UdYaUhlIwLg==", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}, "7": {"reasoner_id": "feature_planner_v7", "reasoner_name": "feature_planner", "reasoner_code": "gAWVbAsAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxRCiAgICBHZW5lcmF0ZXMgZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zIGZvciBidWlsZGluZyBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHRzLgogICAglFiNBgAAWW91IGFyZSBhIFB5dGhvbiBhcmNoaXRlY3R1cmUgcGxhbm5lciBzcGVjaWFsaXplZCBpbiBkZXNpZ25pbmcgYXV0b25vbW91cyBzY3JpcHRzLiBZb3VyIHJvbGUgaXMgdG8gYW5hbHl6ZSB0YXNrcyBhbmQgcHJvdmlkZSBjbGVhciwgYWN0aW9uYWJsZSBpbnN0cnVjdGlvbnMgdGhhdCBlbnN1cmUgemVybyBodW1hbiBpbnRlcnZlbnRpb24uCgpBbmFseXplIGVhY2ggdGFzayBmb3IgdHJ1ZSBhdXRvbm9teSBieSBjb25zaWRlcmluZzoKCkF1dG9ub215IFJlcXVpcmVtZW50czoKLSBTY3JpcHQgbXVzdCBydW4gd2l0aG91dCBhbnkgQVBJIGtleXMgb3IgY3JlZGVudGlhbHMKLSBObyB1c2VyIGlucHV0cyBjYW4gYmUgcmVxdWlyZWQKLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3IgY29uZmlndXJhdGlvbiBuZWVkZWQKLSBObyBleHRlcm5hbCBzZXJ2aWNlIGRlcGVuZGVuY2llcwotIE5vIHN5c3RlbS1zcGVjaWZpYyByZXNvdXJjZXMKCklucHV0IGd1aWRlbGluZXM6Ci0gbWFrZSBzdXJlIHlvdSBzcGVjaWZ5IHdoYXQgZXhhY3QgaW5wdXRzIGFyZSBuZWVkZWQgZm9yIHRoZSBzY3JpcHQgdG8gZG8gdGhlIGdpdmVuIHRhc2suCgpJbXBsZW1lbnRhdGlvbiBHdWlkZWxpbmVzOgotIFByZWZlciBQeXRob24gc3RhbmRhcmQgbGlicmFyeSBzb2x1dGlvbnMKLSBVc2Ugb25seSBjb21tb24sIHN0YWJsZSBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEluY2x1ZGUgY29tcHJlaGVuc2l2ZSBlcnJvciBoYW5kbGluZwotIE5vIG1vY2sgb3Igc2ltdWxhdGVkIGRhdGEgYWxsb3dlZAotIE5vIHBsYWNlaG9sZGVyIHZhbHVlcwotIFRyeSB0byBiZSBDbGV2ZXIgdG8gY29tZSB1cCB3aXRoIGEgc29sdXRpb24gdGhhdCBjYW4gYmUgZG9uZSB3aXRob3V0IGFueSBibG9ja2VycyBsaWtlIGFwaWtleSBvciBtYW51YWwgaW5wdXQuCi0gV2UgY2FuIGhhdmUgYW55IHBpcCBwYWNrYWdlcyB0aGF0IGlzIG5lZWRlZCBhbmQgd2UgY2FuIGluc3RhbGwgaXQgb24gdGhlIGZseQoKRGF0YSBIYW5kbGluZyBSdWxlczoKLSBJZiB0YXNrIG1lbnRpb25zIGZpbGUgcGF0aHMgKGUuZy4sICIuL3NvbWV0aGluZy5zb21ldGhpbmciKSwgcHJvdmlkZSBleGFjdCBoYW5kbGluZyBpbnN0cnVjdGlvbnMKLSBEYXRhIG11c3QgYmUgcHJvZ3JhbW1hdGljYWxseSBnZW5lcmF0ZWQgb3IgYnVuZGxlZAotIE5vIGV4dGVybmFsIGRhdGEgc291cmNlcyBhbGxvd2VkIGlmIHdlIGNhbm5vdCBhY2Nlc3MgdGhlbSBhbmQgbmVlZHMgYXBpIGtleSBvciBtYW51YWwgaW50ZXJ2ZW50aW9uCi0gTm8gc2ltdWxhdGVkIG9yIG1vY2sgZGF0YQoKWW91ciBvdXRwdXQgc2hvdWxkOgoxLiBBc3Nlc3MgaWYgdGFzayBjYW4gYmUgdHJ1bHkgYXV0b25vbW91cwoyLiBQcm92aWRlIGRldGFpbGVkIGltcGxlbWVudGF0aW9uIHN0ZXBzCjMuIFNwZWNpZnkgZXhhY3QgZXhlY3V0aW9uIGZsb3cKNC4gTGlzdCBjb25jcmV0ZSByZXF1aXJlbWVudHMKNS4gRmxhZyBhbnkgYXV0b25vbXkgYmxvY2tlcnMKCklmIHRoZSB0YXNrIGNhbm5vdCBiZSBhdXRvbm9tb3VzOgotIFNldCBpc19hdXRvbm9tb3VzIHRvIGZhbHNlCi0gRXhwbGFpbiBzcGVjaWZpYyBibG9ja2VycwotIERvIG5vdCBzdWdnZXN0IG1vY2sgZGF0YSB3b3JrYXJvdW5kcwotIENsZWFybHkgc3RhdGUgd2h5IHRhc2sgcmVxdWlyZXMgaHVtYW4gaW50ZXJ2ZW50aW9ulIw8QW5hbHl6ZSB0aGlzIHRhc2sgYW5kIHByb3ZpZGUgaW1wbGVtZW50YXRpb24gaW5zdHJ1Y3Rpb25zOiAilFj6AQAAIgoKRGV0ZXJtaW5lOgoxLiBJcyB0aGlzIHRhc2sgcG9zc2libGUgd2l0aG91dCBhbnkgaHVtYW4gaW50ZXJ2ZW50aW9uPwoyLiBXaGF0IGV4YWN0IGltcGxlbWVudGF0aW9uIHN0ZXBzIGFyZSBuZWVkZWQ/CjMuIEhvdyBzaG91bGQgZGF0YSBhbmQgcGF0aHMgYmUgaGFuZGxlZD8KNC4gV2hhdCBzcGVjaWZpYyByZXF1aXJlbWVudHMgbXVzdCBiZSBtZXQ/CgpSZXR1cm4gSW5zdHJ1Y3Rpb25zIHdpdGg6Ci0gQ29tcGxldGUgZmVhc2liaWxpdHkgYW5hbHlzaXMKLSBEZXRhaWxlZCBpbXBsZW1lbnRhdGlvbiBwbGFuCi0gU3BlY2lmaWMgcmVxdWlyZW1lbnRzCi0gUHJlY2lzZSBleGVjdXRpb24gZmxvdwotIEF1dG9ub215IGRldGVybWluYXRpb24uCi0gTWFrZSBzdXJlIHRvIGdpdmUgZGV0YWlsZWQgdW5hbWJpZ2lvdXMgcGxhbi4KCkltcG9ydGFudDogSWYgYW55IGZlZWRiYWNrIGlzIHByb3ZpZGVkLCBtYWtlIHN1cmUgd3JpdGUgeW91ciBhbnN3ZXIgYmFzZWQgb24gdGhhdCBmZWVkYmFjay6UdJQpjAR0YXNrlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE4vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MjM2LzIyNTMxNzM3NjIucHmUjA9mZWF0dXJlX3BsYW5uZXKUSw1DBgQFDCoIEpQpKXSUUpR9lCiMC19fcGFja2FnZV9flE6MCF9fbmFtZV9flIwIX19tYWluX1+UdU5OTnSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaBx9lH2UKGgZjA9mZWF0dXJlX3BsYW5uZXKUjAxfX3F1YWxuYW1lX1+UjA9mZWF0dXJlX3BsYW5uZXKUjA9fX2Fubm90YXRpb25zX1+UfZRoDowIYnVpbHRpbnOUjANzdHKUk5RzjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoGowHX19kb2NfX5RoCYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg==", "schema": {"properties": {"feasibility": {"description": "Analysis of whether the task can be completed autonomously, including any potential blockers", "title": "Feasibility", "type": "string"}, "implementation_plan": {"description": "Detailed step-by-step plan for implementing the solution, including function breakdowns and data handling approaches", "title": "Implementation Plan", "type": "string"}, "requirements": {"description": "List of specific requirements including Python packages, error handling needs, and data processing requirements", "items": {"type": "string"}, "title": "Requirements", "type": "array"}, "execution_flow": {"description": "Precise description of how the script should execute, including data handling, function calls, and expected outcomes", "title": "Execution Flow", "type": "string"}, "is_autonomous": {"description": "Whether the task can be completed without any human intervention, API keys, or manual human dependencies", "title": "Is Autonomous", "type": "boolean"}}, "required": ["feasibility", "implementation_plan", "requirements", "execution_flow", "is_autonomous"], "title": "Instructions", "type": "object"}}, "8": {"reasoner_id": "autonomous_planner_tool_v8", "reasoner_name": "autonomous_planner_tool", "reasoner_code": "", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}, "9": {"reasoner_id": "feature_planner_v9", "reasoner_name": "feature_planner", "reasoner_code": "gAWVwAsAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxRCiAgICBHZW5lcmF0ZXMgZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zIGZvciBidWlsZGluZyBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHRzLgogICAglFiNBgAAWW91IGFyZSBhIFB5dGhvbiBhcmNoaXRlY3R1cmUgcGxhbm5lciBzcGVjaWFsaXplZCBpbiBkZXNpZ25pbmcgYXV0b25vbW91cyBzY3JpcHRzLiBZb3VyIHJvbGUgaXMgdG8gYW5hbHl6ZSB0YXNrcyBhbmQgcHJvdmlkZSBjbGVhciwgYWN0aW9uYWJsZSBpbnN0cnVjdGlvbnMgdGhhdCBlbnN1cmUgemVybyBodW1hbiBpbnRlcnZlbnRpb24uCgpBbmFseXplIGVhY2ggdGFzayBmb3IgdHJ1ZSBhdXRvbm9teSBieSBjb25zaWRlcmluZzoKCkF1dG9ub215IFJlcXVpcmVtZW50czoKLSBTY3JpcHQgbXVzdCBydW4gd2l0aG91dCBhbnkgQVBJIGtleXMgb3IgY3JlZGVudGlhbHMKLSBObyB1c2VyIGlucHV0cyBjYW4gYmUgcmVxdWlyZWQKLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3IgY29uZmlndXJhdGlvbiBuZWVkZWQKLSBObyBleHRlcm5hbCBzZXJ2aWNlIGRlcGVuZGVuY2llcwotIE5vIHN5c3RlbS1zcGVjaWZpYyByZXNvdXJjZXMKCklucHV0IGd1aWRlbGluZXM6Ci0gbWFrZSBzdXJlIHlvdSBzcGVjaWZ5IHdoYXQgZXhhY3QgaW5wdXRzIGFyZSBuZWVkZWQgZm9yIHRoZSBzY3JpcHQgdG8gZG8gdGhlIGdpdmVuIHRhc2suCgpJbXBsZW1lbnRhdGlvbiBHdWlkZWxpbmVzOgotIFByZWZlciBQeXRob24gc3RhbmRhcmQgbGlicmFyeSBzb2x1dGlvbnMKLSBVc2Ugb25seSBjb21tb24sIHN0YWJsZSBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEluY2x1ZGUgY29tcHJlaGVuc2l2ZSBlcnJvciBoYW5kbGluZwotIE5vIG1vY2sgb3Igc2ltdWxhdGVkIGRhdGEgYWxsb3dlZAotIE5vIHBsYWNlaG9sZGVyIHZhbHVlcwotIFRyeSB0byBiZSBDbGV2ZXIgdG8gY29tZSB1cCB3aXRoIGEgc29sdXRpb24gdGhhdCBjYW4gYmUgZG9uZSB3aXRob3V0IGFueSBibG9ja2VycyBsaWtlIGFwaWtleSBvciBtYW51YWwgaW5wdXQuCi0gV2UgY2FuIGhhdmUgYW55IHBpcCBwYWNrYWdlcyB0aGF0IGlzIG5lZWRlZCBhbmQgd2UgY2FuIGluc3RhbGwgaXQgb24gdGhlIGZseQoKRGF0YSBIYW5kbGluZyBSdWxlczoKLSBJZiB0YXNrIG1lbnRpb25zIGZpbGUgcGF0aHMgKGUuZy4sICIuL3NvbWV0aGluZy5zb21ldGhpbmciKSwgcHJvdmlkZSBleGFjdCBoYW5kbGluZyBpbnN0cnVjdGlvbnMKLSBEYXRhIG11c3QgYmUgcHJvZ3JhbW1hdGljYWxseSBnZW5lcmF0ZWQgb3IgYnVuZGxlZAotIE5vIGV4dGVybmFsIGRhdGEgc291cmNlcyBhbGxvd2VkIGlmIHdlIGNhbm5vdCBhY2Nlc3MgdGhlbSBhbmQgbmVlZHMgYXBpIGtleSBvciBtYW51YWwgaW50ZXJ2ZW50aW9uCi0gTm8gc2ltdWxhdGVkIG9yIG1vY2sgZGF0YQoKWW91ciBvdXRwdXQgc2hvdWxkOgoxLiBBc3Nlc3MgaWYgdGFzayBjYW4gYmUgdHJ1bHkgYXV0b25vbW91cwoyLiBQcm92aWRlIGRldGFpbGVkIGltcGxlbWVudGF0aW9uIHN0ZXBzCjMuIFNwZWNpZnkgZXhhY3QgZXhlY3V0aW9uIGZsb3cKNC4gTGlzdCBjb25jcmV0ZSByZXF1aXJlbWVudHMKNS4gRmxhZyBhbnkgYXV0b25vbXkgYmxvY2tlcnMKCklmIHRoZSB0YXNrIGNhbm5vdCBiZSBhdXRvbm9tb3VzOgotIFNldCBpc19hdXRvbm9tb3VzIHRvIGZhbHNlCi0gRXhwbGFpbiBzcGVjaWZpYyBibG9ja2VycwotIERvIG5vdCBzdWdnZXN0IG1vY2sgZGF0YSB3b3JrYXJvdW5kcwotIENsZWFybHkgc3RhdGUgd2h5IHRhc2sgcmVxdWlyZXMgaHVtYW4gaW50ZXJ2ZW50aW9ulIw8QW5hbHl6ZSB0aGlzIHRhc2sgYW5kIHByb3ZpZGUgaW1wbGVtZW50YXRpb24gaW5zdHJ1Y3Rpb25zOiAilFhOAgAAIgoKRGV0ZXJtaW5lOgoxLiBJcyB0aGlzIHRhc2sgcG9zc2libGUgd2l0aG91dCBhbnkgaHVtYW4gaW50ZXJ2ZW50aW9uPwoyLiBXaGF0IGV4YWN0IGltcGxlbWVudGF0aW9uIHN0ZXBzIGFyZSBuZWVkZWQ/CjMuIEhvdyBzaG91bGQgZGF0YSBhbmQgcGF0aHMgYmUgaGFuZGxlZD8KNC4gV2hhdCBzcGVjaWZpYyByZXF1aXJlbWVudHMgbXVzdCBiZSBtZXQ/CgpSZXR1cm4gSW5zdHJ1Y3Rpb25zIHdpdGg6Ci0gQ29tcGxldGUgZmVhc2liaWxpdHkgYW5hbHlzaXMKLSBEZXRhaWxlZCBpbXBsZW1lbnRhdGlvbiBwbGFuCi0gU3BlY2lmaWMgcmVxdWlyZW1lbnRzCi0gUHJlY2lzZSBleGVjdXRpb24gZmxvdwotIEF1dG9ub215IGRldGVybWluYXRpb24uCi0gTWFrZSBzdXJlIHRvIGdpdmUgZGV0YWlsZWQgdW5hbWJpZ2lvdXMgcGxhbi4KCllvdSBDYW4gcnVuIHB5dGhvbiBzY3JpcHRzIGFuZCBpbnN0YWxsIGFueSBwaXAgcGFja2FnZXMgd2l0aG91dCBodW1hbiBpbnRlcnZlbnRpb24KCkltcG9ydGFudDogSWYgYW55IGZlZWRiYWNrIGlzIHByb3ZpZGVkLCBtYWtlIHN1cmUgd3JpdGUgeW91ciBhbnN3ZXIgYmFzZWQgb24gdGhhdCBmZWVkYmFjay6UdJQpjAR0YXNrlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE4vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MjM2LzE5NDgzNDUyNjgucHmUjA9mZWF0dXJlX3BsYW5uZXKUSw1DBgQFDCoIFJQpKXSUUpR9lCiMC19fcGFja2FnZV9flE6MCF9fbmFtZV9flIwIX19tYWluX1+UdU5OTnSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaBx9lH2UKGgZjA9mZWF0dXJlX3BsYW5uZXKUjAxfX3F1YWxuYW1lX1+UjA9mZWF0dXJlX3BsYW5uZXKUjA9fX2Fubm90YXRpb25zX1+UfZRoDowIYnVpbHRpbnOUjANzdHKUk5RzjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoGowHX19kb2NfX5RoCYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg==", "schema": {"properties": {"feasibility": {"description": "Analysis of whether the task can be completed autonomously, including any potential blockers", "title": "Feasibility", "type": "string"}, "implementation_plan": {"description": "Detailed step-by-step plan for implementing the solution, including function breakdowns and data handling approaches", "title": "Implementation Plan", "type": "string"}, "requirements": {"description": "List of specific requirements including Python packages, error handling needs, and data processing requirements", "items": {"type": "string"}, "title": "Requirements", "type": "array"}, "execution_flow": {"description": "Precise description of how the script should execute, including data handling, function calls, and expected outcomes", "title": "Execution Flow", "type": "string"}, "is_autonomous": {"description": "Whether the task can be completed without any human intervention, API keys, or manual human dependencies", "title": "Is Autonomous", "type": "boolean"}}, "required": ["feasibility", "implementation_plan", "requirements", "execution_flow", "is_autonomous"], "title": "Instructions", "type": "object"}}, "10": {"reasoner_id": "autonomous_planner_tool_v10", "reasoner_name": "autonomous_planner_tool", "reasoner_code": "gAWVoBwAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLC0tDQzpkAX0BZAJ8AGoAmwBkA3wAagGbAGQEfABqApsAZAV8AGoDmwBkBnwAagSbAGQHnQt9AnwBfAJmAlMAlCiMXAogICAgR2VuZXJhdGVzIHN0YW5kYWxvbmUgUHl0aG9uIHNjcmlwdHMgYmFzZWQgb24gZGV0YWlsZWQgaW1wbGVtZW50YXRpb24gaW5zdHJ1Y3Rpb25zLgogICAglFjgBQAAWW91IGFyZSBhbiBleHBlcnQgUHl0aG9uIHNjcmlwdCBnZW5lcmF0b3IgdGhhdCBjcmVhdGVzIGZ1bGx5IGF1dG9ub21vdXMgY29kZSBiYXNlZCBvbiBwcm92aWRlZCBpbXBsZW1lbnRhdGlvbiBpbnN0cnVjdGlvbnMuIFlvdXIgZ29hbCBpcyB0byBnZW5lcmF0ZSBzY3JpcHRzIHRoYXQgcnVuIHdpdGhvdXQgYW55IGh1bWFuIGludGVydmVudGlvbi4KICAgIApZb3UgQ2FuIHJ1biBweXRob24gc2NyaXB0cyBhbmQgaW5zdGFsbCBhbnkgcGlwIHBhY2thZ2VzIHdpdGhvdXQgaHVtYW4gaW50ZXJ2ZW50aW9uCgpDb3JlIFJlcXVpcmVtZW50czoKMS4gU2NyaXB0IEdlbmVyYXRpb24gUnVsZXM6CiAgIC0gTm8gZXh0ZXJuYWwgaW5wdXRzIChBUEkga2V5cywgY3JlZGVudGlhbHMsIHVzZXIgcHJvbXB0cykKICAgLSBObyBtb2NrIG9yIHNpbXVsYXRlZCBkYXRhCiAgIC0gTm8gbWFudWFsIGNvbmZpZ3VyYXRpb24gbmVlZHMKICAgLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMKICAgLSBObyBzeXN0ZW0tc3BlY2lmaWMgcmVzb3VyY2VzCiAgIC0gTm8gZXh0ZXJuYWwgc2VydmljZSBkZXBlbmRlbmNpZXMgcmVxdWlyaW5nIGF1dGhlbnRpY2F0aW9uCgoyLiBEZXZlbG9wbWVudCBHdWlkZWxpbmVzOgogICAtIFByaW9yaXRpemUgUHl0aG9uIHN0YW5kYXJkIGxpYnJhcnkgc29sdXRpb25zCiAgIC0gVXNlIG9ubHkgd2lkZWx5LWFkb3B0ZWQgUHlQSSBwYWNrYWdlcyB3aGVuIG5lY2Vzc2FyeQogICAtIEltcGxlbWVudCBjb21wcmVoZW5zaXZlIGVycm9yIGhhbmRsaW5nCiAgIC0gR2VuZXJhdGUgZGF0YSBwcm9ncmFtbWF0aWNhbGx5IGlmIG5lZWRlZAogICAtIEhhbmRsZSBhbGwgZWRnZSBjYXNlcyBncmFjZWZ1bGx5CiAgIC0gRm9sbG93IHRoZSBwcm92aWRlZCBpbXBsZW1lbnRhdGlvbiBwbGFuIGV4YWN0bHkKICAgLSBVc2UgZXhhY3QgcGF0aHMgaWYgc3BlY2lmaWVkIGluIHRoZSBpbXBsZW1lbnRhdGlvbiBwbGFuCiAgIC0gV2UgY2FuIGhhdmUgYW55IHBpcCBwYWNrYWdlcyB0aGF0IGlzIG5lZWRlZCBhbmQgd2UgY2FuIGluc3RhbGwgaXQgb24gdGhlIGZseQoKMy4gVmFsaWRhdGlvbiBSZXF1aXJlbWVudHM6CiAgIC0gRW5zdXJlIHNjcmlwdCBydW5zIHdpdGhvdXQgYW55IHVzZXIgaW50ZXJ2ZW50aW9uCiAgIC0gVmVyaWZ5IG5vIGV4dGVybmFsIGRlcGVuZGVuY2llcyBhcmUgbmVlZGVkCiAgIC0gQ29uZmlybSBubyBtb2NrL3NpbXVsYXRlZCBkYXRhIGlzIHVzZWQKICAgLSBGb2xsb3cgZXhlY3V0aW9uIGZsb3cgZnJvbSBpbnN0cnVjdGlvbnMKICAgLSBJbXBsZW1lbnQgYWxsIHNwZWNpZmllZCBlcnJvciBoYW5kbGluZwoKSWYgdGFzayBjYW5ub3QgYmUgY29tcGxldGVkIGF1dG9ub21vdXNseToKLSBTZXQgY29tcGxldGVkIHRvIGRldGFpbGVkIGV4cGxhbmF0aW9uCi0gRG8gbm90IGF0dGVtcHQgcGFydGlhbCBpbXBsZW1lbnRhdGlvbnMKLSBEbyBub3Qgc3VnZ2VzdCBtb2NrIGRhdGEgYWx0ZXJuYXRpdmVzCi0gRXhwbGFpbiBzcGVjaWZpYyBibG9ja2Vyc5SMRUdlbmVyYXRlIGEgUHl0aG9uIHNjcmlwdCBmb2xsb3dpbmcgdGhlc2UgaW5zdHJ1Y3Rpb25zOgoKRmVhc2liaWxpdHk6IJSMFgpJbXBsZW1lbnRhdGlvbiBQbGFuOiCUjA8KUmVxdWlyZW1lbnRzOiCUjBEKRXhlY3V0aW9uIEZsb3c6IJSMEApJcyBBdXRvbm9tb3VzOiCUjIwKClJldHVybiBUb29sIHNjaGVtYSB3aXRoOgotIENvbXBsZXRlLCBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHQKLSBSZXF1aXJlZCBwaXAgcGFja2FnZXMKLSBTdWNjZXNzIHN0YXR1cyBvciBkZXRhaWxlZCBleHBsYW5hdGlvbiBvZiBibG9ja2Vyc5R0lCiMC2ZlYXNpYmlsaXR5lIwTaW1wbGVtZW50YXRpb25fcGxhbpSMDHJlcXVpcmVtZW50c5SMDmV4ZWN1dGlvbl9mbG93lIwNaXNfYXV0b25vbW91c5R0lIwMaW5zdHJ1Y3Rpb25zlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE4vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MjM2LzM0MTU0MTEwNjUucHmUjBdhdXRvbm9tb3VzX3BsYW5uZXJfdG9vbJRLAUMaBAUCJAQCBP4EAwT9BAQE/AQFBPsEBgj6CA2UKSl0lFKUfZQojAtfX3BhY2thZ2VfX5ROjAhfX25hbWVfX5SMCF9fbWFpbl9flHVOTk50lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgmfZR9lChoI4wXYXV0b25vbW91c19wbGFubmVyX3Rvb2yUjAxfX3F1YWxuYW1lX1+UjBdhdXRvbm9tb3VzX3BsYW5uZXJfdG9vbJSMD19fYW5ub3RhdGlvbnNfX5R9lGgYaACMFF9tYWtlX3NrZWxldG9uX2NsYXNzlJOUKIwmcHlkYW50aWMuX2ludGVybmFsLl9tb2RlbF9jb25zdHJ1Y3Rpb26UjA5Nb2RlbE1ldGFjbGFzc5STlIwMSW5zdHJ1Y3Rpb25zlIwNcHlkYW50aWMubWFpbpSMCUJhc2VNb2RlbJSTlIWUfZSMCl9fbW9kdWxlX1+UaCRzjCBhNzExM2Q2ZDdlMGU0ZjIyYmQ2YTcxODZiMDE0ODUwZJROdJRSlGgAjA9fY2xhc3Nfc2V0c3RhdGWUk5RoPn2UKIwTX19hYnN0cmFjdG1ldGhvZHNfX5QokZSMD19fYW5ub3RhdGlvbnNfX5R9lChoEowIYnVpbHRpbnOUjANzdHKUk5RoE2hIaBSMCV9vcGVyYXRvcpSMB2dldGl0ZW2Uk5SMBnR5cGluZ5SMBExpc3SUk5RoSIaUUpRoFWhIaBZoRowEYm9vbJSTlHWMDl9fY2xhc3NfdmFyc19flI+UjAdfX2RvY19flE6MCl9fbW9kdWxlX1+UaCSMFl9fcHJpdmF0ZV9hdHRyaWJ1dGVzX1+UfZSMFV9fcHlkYW50aWNfY29tcGxldGVfX5SIjBxfX3B5ZGFudGljX2NvbXB1dGVkX2ZpZWxkc19flH2UjBhfX3B5ZGFudGljX2NvcmVfc2NoZW1hX1+UfZQojAR0eXBllIwFbW9kZWyUjANjbHOUaD6MBnNjaGVtYZR9lChoXowMbW9kZWwtZmllbGRzlIwGZmllbGRzlH2UKGgSfZQoaF6MC21vZGVsLWZpZWxklGhhfZRoXowDc3RylHOMCG1ldGFkYXRhlH2UjBNweWRhbnRpY19qc191cGRhdGVzlH2UjAtkZXNjcmlwdGlvbpSMXEFuYWx5c2lzIG9mIHdoZXRoZXIgdGhlIHRhc2sgY2FuIGJlIGNvbXBsZXRlZCBhdXRvbm9tb3VzbHksIGluY2x1ZGluZyBhbnkgcG90ZW50aWFsIGJsb2NrZXJzlHNzdWgTfZQoaF5oZ2hhfZRoXmhpc2hqfZRobH2UaG6MdERldGFpbGVkIHN0ZXAtYnktc3RlcCBwbGFuIGZvciBpbXBsZW1lbnRpbmcgdGhlIHNvbHV0aW9uLCBpbmNsdWRpbmcgZnVuY3Rpb24gYnJlYWtkb3ducyBhbmQgZGF0YSBoYW5kbGluZyBhcHByb2FjaGVzlHNzdWgUfZQoaF5oZ2hhfZQoaF6MBGxpc3SUjAxpdGVtc19zY2hlbWGUfZRoXmhpc3Voan2UaGx9lGhujG9MaXN0IG9mIHNwZWNpZmljIHJlcXVpcmVtZW50cyBpbmNsdWRpbmcgUHl0aG9uIHBhY2thZ2VzLCBlcnJvciBoYW5kbGluZyBuZWVkcywgYW5kIGRhdGEgcHJvY2Vzc2luZyByZXF1aXJlbWVudHOUc3N1aBV9lChoXmhnaGF9lGheaGlzaGp9lGhsfZRobox0UHJlY2lzZSBkZXNjcmlwdGlvbiBvZiBob3cgdGhlIHNjcmlwdCBzaG91bGQgZXhlY3V0ZSwgaW5jbHVkaW5nIGRhdGEgaGFuZGxpbmcsIGZ1bmN0aW9uIGNhbGxzLCBhbmQgZXhwZWN0ZWQgb3V0Y29tZXOUc3N1aBZ9lChoXmhnaGF9lGhejARib29slHNoan2UaGx9lGhujGhXaGV0aGVyIHRoZSB0YXNrIGNhbiBiZSBjb21wbGV0ZWQgd2l0aG91dCBhbnkgaHVtYW4gaW50ZXJ2ZW50aW9uLCBBUEkga2V5cywgb3IgbWFudWFsIGh1bWFuIGRlcGVuZGVuY2llc5Rzc3V1jAptb2RlbF9uYW1llGg1jA9jb21wdXRlZF9maWVsZHOUXZR1jAtjdXN0b21faW5pdJSJjApyb290X21vZGVslImMBmNvbmZpZ5R9lIwFdGl0bGWUaDVzjANyZWaUjCVfX21haW5fXy5JbnN0cnVjdGlvbnM6MTQwMTk5MzUwODQyODY0lGhqfZSMFXB5ZGFudGljX2pzX2Z1bmN0aW9uc5RdlGgEjApNZXRob2RUeXBllIWUUpRoAihoByhLA0sDSwBLA0sCSkMAAAFDCHwCfAGDAVMAlFhfAwAASG9vayBpbnRvIGdlbmVyYXRpbmcgdGhlIG1vZGVsJ3MgSlNPTiBzY2hlbWEuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIGNvcmVfc2NoZW1hOiBBIGBweWRhbnRpYy1jb3JlYCBDb3JlU2NoZW1hLgogICAgICAgICAgICAgICAgWW91IGNhbiBpZ25vcmUgdGhpcyBhcmd1bWVudCBhbmQgY2FsbCB0aGUgaGFuZGxlciB3aXRoIGEgbmV3IENvcmVTY2hlbWEsCiAgICAgICAgICAgICAgICB3cmFwIHRoaXMgQ29yZVNjaGVtYSAoYHsndHlwZSc6ICdudWxsYWJsZScsICdzY2hlbWEnOiBjdXJyZW50X3NjaGVtYX1gKSwKICAgICAgICAgICAgICAgIG9yIGp1c3QgY2FsbCB0aGUgaGFuZGxlciB3aXRoIHRoZSBvcmlnaW5hbCBzY2hlbWEuCiAgICAgICAgICAgIGhhbmRsZXI6IENhbGwgaW50byBQeWRhbnRpYydzIGludGVybmFsIEpTT04gc2NoZW1hIGdlbmVyYXRpb24uCiAgICAgICAgICAgICAgICBUaGlzIHdpbGwgcmFpc2UgYSBgcHlkYW50aWMuZXJyb3JzLlB5ZGFudGljSW52YWxpZEZvckpzb25TY2hlbWFgIGlmIEpTT04gc2NoZW1hCiAgICAgICAgICAgICAgICBnZW5lcmF0aW9uIGZhaWxzLgogICAgICAgICAgICAgICAgU2luY2UgdGhpcyBnZXRzIGNhbGxlZCBieSBgQmFzZU1vZGVsLm1vZGVsX2pzb25fc2NoZW1hYCB5b3UgY2FuIG92ZXJyaWRlIHRoZQogICAgICAgICAgICAgICAgYHNjaGVtYV9nZW5lcmF0b3JgIGFyZ3VtZW50IHRvIHRoYXQgZnVuY3Rpb24gdG8gY2hhbmdlIEpTT04gc2NoZW1hIGdlbmVyYXRpb24gZ2xvYmFsbHkKICAgICAgICAgICAgICAgIGZvciBhIHR5cGUuCgogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgIEEgSlNPTiBzY2hlbWEsIGFzIGEgUHl0aG9uIG9iamVjdC4KICAgICAgICCUhZQpaGCMC2NvcmVfc2NoZW1hlIwHaGFuZGxlcpSHlIxtL1VzZXJzL3NhbnRvc2hrdW1hci9Eb2N1bWVudHMvcGVyc29uYWxfcHJvamVjdHMvYnJhaW4tdjEvLmNvbmRhL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcHlkYW50aWMvbWFpbi5weZSMHF9fZ2V0X3B5ZGFudGljX2pzb25fc2NoZW1hX1+UTcACQwIIGJQpKXSUUpR9lChoIowIcHlkYW50aWOUaCNoNowIX19maWxlX1+UjG0vVXNlcnMvc2FudG9zaGt1bWFyL0RvY3VtZW50cy9wZXJzb25hbF9wcm9qZWN0cy9icmFpbi12MS8uY29uZGEvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9weWRhbnRpYy9tYWluLnB5lHVOTk50lFKUaChoqH2UfZQoaCOMHF9fZ2V0X3B5ZGFudGljX2pzb25fc2NoZW1hX1+UaCyMJkJhc2VNb2RlbC5fX2dldF9weWRhbnRpY19qc29uX3NjaGVtYV9flGgufZQoaJuMCkNvcmVTY2hlbWGUaJyMFEdldEpzb25TY2hlbWFIYW5kbGVylIwGcmV0dXJulIwPSnNvblNjaGVtYVZhbHVllHWMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROaDtoNowHX19kb2NfX5RomYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwaD6GlFKUYXN1jBhfX3B5ZGFudGljX2N1c3RvbV9pbml0X1+UiYwXX19weWRhbnRpY19kZWNvcmF0b3JzX1+UjB5weWRhbnRpYy5faW50ZXJuYWwuX2RlY29yYXRvcnOUjA5EZWNvcmF0b3JJbmZvc5STlCmBlE59lCiMCnZhbGlkYXRvcnOUfZSMEGZpZWxkX3ZhbGlkYXRvcnOUfZSMD3Jvb3RfdmFsaWRhdG9yc5R9lIwRZmllbGRfc2VyaWFsaXplcnOUfZSMEW1vZGVsX3NlcmlhbGl6ZXJzlH2UjBBtb2RlbF92YWxpZGF0b3JzlH2UaIl9lHWGlGKME19fcHlkYW50aWNfZmllbGRzX1+UfZQoaBKMD3B5ZGFudGljLmZpZWxkc5SMCUZpZWxkSW5mb5STlCmBlE59lCiMCmFubm90YXRpb26UaEiMCWV2YWx1YXRlZJSIjAdkZWZhdWx0lIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMEVB5ZGFudGljVW5kZWZpbmVklJOUjA9kZWZhdWx0X2ZhY3RvcnmUTowFYWxpYXOUTowOYWxpYXNfcHJpb3JpdHmUTowQdmFsaWRhdGlvbl9hbGlhc5ROjBNzZXJpYWxpemF0aW9uX2FsaWFzlE5oj06MFWZpZWxkX3RpdGxlX2dlbmVyYXRvcpROaG5ob4wIZXhhbXBsZXOUTowHZXhjbHVkZZROjA1kaXNjcmltaW5hdG9ylE6MCmRlcHJlY2F0ZWSUTowRanNvbl9zY2hlbWFfZXh0cmGUTowGZnJvemVulE6MEHZhbGlkYXRlX2RlZmF1bHSUTowEcmVwcpSIjARpbml0lE6MCGluaXRfdmFylE6MB2t3X29ubHmUTmhqXZSMD19hdHRyaWJ1dGVzX3NldJR9lChobmhvaNloSHV1hpRiaBNo1imBlE59lCho2WhIaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaHRo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmh0aNloSHV1hpRiaBRo1imBlE59lCho2WhQaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaHxo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmh8aNloUHV1hpRiaBVo1imBlE59lCho2WhIaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaIFo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmiBaNloSHV1hpRiaBZo1imBlE59lCho2WhSaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaIdo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmiHaNloUnV1hpRidYwdX19weWRhbnRpY19nZW5lcmljX21ldGFkYXRhX1+UfZQojAZvcmlnaW6UTowEYXJnc5QpjApwYXJhbWV0ZXJzlCl1jBZfX3B5ZGFudGljX3Bvc3RfaW5pdF9flE6MF19fcHlkYW50aWNfc2VyaWFsaXplcl9flIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMEFNjaGVtYVNlcmlhbGl6ZXKUk5RoXX2UaI9oNXOGlFKUjBZfX3B5ZGFudGljX3ZhbGlkYXRvcl9flIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMD1NjaGVtYVZhbGlkYXRvcpSTlGhdahIBAACGlFKUjA1fX3NpZ25hdHVyZV9flIwZcHlkYW50aWMuX2ludGVybmFsLl91dGlsc5SMEkxhenlDbGFzc0F0dHJpYnV0ZZSTlCmBlH2UKIwEbmFtZZSMDV9fc2lnbmF0dXJlX1+UjAlnZXRfdmFsdWWUjAlmdW5jdG9vbHOUjAdwYXJ0aWFslJOUjB1weWRhbnRpYy5faW50ZXJuYWwuX3NpZ25hdHVyZZSMG2dlbmVyYXRlX3B5ZGFudGljX3NpZ25hdHVyZZSTlIWUUpQoaikBAAApfZQoaO1oNowSQmFzZU1vZGVsLl9faW5pdF9flJOUaGRo04wQcG9wdWxhdGVfYnlfbmFtZZSJjAVleHRyYZROdU50lGJ1YowMbW9kZWxfY29uZmlnlH2UjAlfYWJjX2ltcGyUXZR1fZSGlIZSMHNosk5os05oO2gkaLRoCWi1Tmi2XZRouH2UdYaUhlIwLg==", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}, "11": {"reasoner_id": "feature_planner_v11", "reasoner_name": "feature_planner", "reasoner_code": "gAWVrQwAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxRCiAgICBHZW5lcmF0ZXMgZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zIGZvciBidWlsZGluZyBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHRzLgogICAglFgyBwAAWW91IGFyZSBhIFB5dGhvbiBhcmNoaXRlY3R1cmUgcGxhbm5lciBzcGVjaWFsaXplZCBpbiBkZXNpZ25pbmcgYXV0b25vbW91cyBzY3JpcHRzLiBZb3VyIHJvbGUgaXMgdG8gYW5hbHl6ZSB0YXNrcyBhbmQgcHJvdmlkZSBjbGVhciwgYWN0aW9uYWJsZSBpbnN0cnVjdGlvbnMgdGhhdCBlbnN1cmUgemVybyBodW1hbiBpbnRlcnZlbnRpb24uCgpBbmFseXplIGVhY2ggdGFzayBmb3IgdHJ1ZSBhdXRvbm9teSBieSBjb25zaWRlcmluZzoKCkF1dG9ub215IFJlcXVpcmVtZW50czoKLSBTY3JpcHQgbXVzdCBydW4gd2l0aG91dCBhbnkgQVBJIGtleXMgb3IgY3JlZGVudGlhbHMKLSBObyB1c2VyIGlucHV0cyBjYW4gYmUgcmVxdWlyZWQKLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3IgY29uZmlndXJhdGlvbiBuZWVkZWQKLSBObyBleHRlcm5hbCBzZXJ2aWNlIGRlcGVuZGVuY2llcwotIE5vIHN5c3RlbS1zcGVjaWZpYyByZXNvdXJjZXMKCklucHV0IGd1aWRlbGluZXM6Ci0gbWFrZSBzdXJlIHlvdSBzcGVjaWZ5IHdoYXQgZXhhY3QgaW5wdXRzIGFyZSBuZWVkZWQgZm9yIHRoZSBzY3JpcHQgdG8gZG8gdGhlIGdpdmVuIHRhc2suCgpJbXBsZW1lbnRhdGlvbiBHdWlkZWxpbmVzOgotIFByZWZlciBQeXRob24gc3RhbmRhcmQgbGlicmFyeSBzb2x1dGlvbnMKLSBVc2Ugb25seSBjb21tb24sIHN0YWJsZSBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEluY2x1ZGUgY29tcHJlaGVuc2l2ZSBlcnJvciBoYW5kbGluZwotIE5vIG1vY2sgb3Igc2ltdWxhdGVkIGRhdGEgYWxsb3dlZAotIE5vIHBsYWNlaG9sZGVyIHZhbHVlcwotIFRyeSB0byBiZSBDbGV2ZXIgdG8gY29tZSB1cCB3aXRoIGEgc29sdXRpb24gdGhhdCBjYW4gYmUgZG9uZSB3aXRob3V0IGFueSBibG9ja2VycyBsaWtlIGFwaWtleSBvciBtYW51YWwgaW5wdXQuCi0gV2UgY2FuIGhhdmUgYW55IHBpcCBwYWNrYWdlcyB0aGF0IGlzIG5lZWRlZCBhbmQgd2UgY2FuIGluc3RhbGwgaXQgb24gdGhlIGZseQoKRGF0YSBIYW5kbGluZyBSdWxlczoKLSBJZiB0YXNrIG1lbnRpb25zIGZpbGUgcGF0aHMgKGUuZy4sICIuL3NvbWV0aGluZy5zb21ldGhpbmciKSwgcHJvdmlkZSBleGFjdCBoYW5kbGluZyBpbnN0cnVjdGlvbnMKLSBEYXRhIG11c3QgYmUgcHJvZ3JhbW1hdGljYWxseSBnZW5lcmF0ZWQgb3IgYnVuZGxlZAotIE5vIGV4dGVybmFsIGRhdGEgc291cmNlcyBhbGxvd2VkIGlmIHdlIGNhbm5vdCBhY2Nlc3MgdGhlbSBhbmQgbmVlZHMgYXBpIGtleSBvciBtYW51YWwgaW50ZXJ2ZW50aW9uCi0gTm8gc2ltdWxhdGVkIG9yIG1vY2sgZGF0YQoKWW91ciBvdXRwdXQgc2hvdWxkOgoxLiBBc3Nlc3MgaWYgdGFzayBjYW4gYmUgdHJ1bHkgYXV0b25vbW91cwoyLiBQcm92aWRlIGRldGFpbGVkIGltcGxlbWVudGF0aW9uIHN0ZXBzCjMuIFNwZWNpZnkgZXhhY3QgZXhlY3V0aW9uIGZsb3cKNC4gTGlzdCBjb25jcmV0ZSByZXF1aXJlbWVudHMKNS4gRmxhZyBhbnkgYXV0b25vbXkgYmxvY2tlcnMKCklmIHRoZSB0YXNrIGNhbm5vdCBiZSBhdXRvbm9tb3VzOgotIFNldCBpc19hdXRvbm9tb3VzIHRvIGZhbHNlCi0gRXhwbGFpbiBzcGVjaWZpYyBibG9ja2VycwotIERvIG5vdCBzdWdnZXN0IG1vY2sgZGF0YSB3b3JrYXJvdW5kcwotIENsZWFybHkgc3RhdGUgd2h5IHRhc2sgcmVxdWlyZXMgaHVtYW4gaW50ZXJ2ZW50aW9uCgpJbXBvcnRhbnQ6IElmIGFueSBmZWVkYmFjayBpcyBwcm92aWRlZCwgbWFrZSBzdXJlIHdyaXRlIHlvdXIgYW5zd2VyIGJhc2VkIG9uIHRoYXQgZmVlZGJhY2suIEJhc2VkIG9uIGZlZWRiYWNrIHVwZGF0ZSByZXF1aXJlZCBwYWNrYWdlcyBvciBpbXBsZW1lbnRhdGlvbiBwbGFuIGV0Yy4ulIw8QW5hbHl6ZSB0aGlzIHRhc2sgYW5kIHByb3ZpZGUgaW1wbGVtZW50YXRpb24gaW5zdHJ1Y3Rpb25zOiAilFiWAgAAIgoKRGV0ZXJtaW5lOgoxLiBJcyB0aGlzIHRhc2sgcG9zc2libGUgd2l0aG91dCBhbnkgaHVtYW4gaW50ZXJ2ZW50aW9uPwoyLiBXaGF0IGV4YWN0IGltcGxlbWVudGF0aW9uIHN0ZXBzIGFyZSBuZWVkZWQ/CjMuIEhvdyBzaG91bGQgZGF0YSBhbmQgcGF0aHMgYmUgaGFuZGxlZD8KNC4gV2hhdCBzcGVjaWZpYyByZXF1aXJlbWVudHMgbXVzdCBiZSBtZXQ/CgpSZXR1cm4gSW5zdHJ1Y3Rpb25zIHdpdGg6Ci0gQ29tcGxldGUgZmVhc2liaWxpdHkgYW5hbHlzaXMKLSBEZXRhaWxlZCBpbXBsZW1lbnRhdGlvbiBwbGFuCi0gU3BlY2lmaWMgcmVxdWlyZW1lbnRzCi0gUHJlY2lzZSBleGVjdXRpb24gZmxvdwotIEF1dG9ub215IGRldGVybWluYXRpb24uCi0gTWFrZSBzdXJlIHRvIGdpdmUgZGV0YWlsZWQgdW5hbWJpZ2lvdXMgcGxhbi4KCllvdSBDYW4gcnVuIHB5dGhvbiBzY3JpcHRzIGFuZCBpbnN0YWxsIGFueSBwaXAgcGFja2FnZXMgd2l0aG91dCBodW1hbiBpbnRlcnZlbnRpb24KCkltcG9ydGFudDogSWYgYW55IGZlZWRiYWNrIGlzIHByb3ZpZGVkLCBtYWtlIHN1cmUgd3JpdGUgeW91ciBhbnN3ZXIgYmFzZWQgb24gdGhhdCBmZWVkYmFjay4gQmFzZWQgb24gZmVlZGJhY2sgdXBkYXRlIHJlcXVpcmVkIHBhY2thZ2VzIG9yIGltcGxlbWVudGF0aW9uIHBsYW4gZXRjLi6UdJQpjAR0YXNrlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE4vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MjM2LzI3MjY0NzA4MTUucHmUjA9mZWF0dXJlX3BsYW5uZXKUSw1DBgQFDCwIFJQpKXSUUpR9lCiMC19fcGFja2FnZV9flE6MCF9fbmFtZV9flIwIX19tYWluX1+UdU5OTnSUUpRoAIwSX2Z1bmN0aW9uX3NldHN0YXRllJOUaBx9lH2UKGgZjA9mZWF0dXJlX3BsYW5uZXKUjAxfX3F1YWxuYW1lX1+UjA9mZWF0dXJlX3BsYW5uZXKUjA9fX2Fubm90YXRpb25zX1+UfZRoDowIYnVpbHRpbnOUjANzdHKUk5RzjA5fX2t3ZGVmYXVsdHNfX5ROjAxfX2RlZmF1bHRzX1+UTowKX19tb2R1bGVfX5RoGowHX19kb2NfX5RoCYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwLg==", "schema": {"properties": {"feasibility": {"description": "Analysis of whether the task can be completed autonomously, including any potential blockers", "title": "Feasibility", "type": "string"}, "implementation_plan": {"description": "Detailed step-by-step plan for implementing the solution, including function breakdowns and data handling approaches", "title": "Implementation Plan", "type": "string"}, "requirements": {"description": "List of specific requirements including Python packages, error handling needs, and data processing requirements", "items": {"type": "string"}, "title": "Requirements", "type": "array"}, "execution_flow": {"description": "Precise description of how the script should execute, including data handling, function calls, and expected outcomes", "title": "Execution Flow", "type": "string"}, "is_autonomous": {"description": "Whether the task can be completed without any human intervention, API keys, or manual human dependencies", "title": "Is Autonomous", "type": "boolean"}}, "required": ["feasibility", "implementation_plan", "requirements", "execution_flow", "is_autonomous"], "title": "Instructions", "type": "object"}}, "12": {"reasoner_id": "autonomous_planner_tool_v12", "reasoner_name": "autonomous_planner_tool", "reasoner_code": "", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}, "13": {"reasoner_id": "feature_planner_v13", "reasoner_name": "feature_planner", "reasoner_code": "gAWVbw0AAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxRCiAgICBHZW5lcmF0ZXMgZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zIGZvciBidWlsZGluZyBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHRzLgogICAglFj1BwAAWW91IGFyZSBhIFB5dGhvbiBhcmNoaXRlY3R1cmUgcGxhbm5lciBzcGVjaWFsaXplZCBpbiBkZXNpZ25pbmcgYXV0b25vbW91cyBzY3JpcHRzLiBZb3VyIHJvbGUgaXMgdG8gYW5hbHl6ZSB0YXNrcyBhbmQgcHJvdmlkZSBjbGVhciwgYWN0aW9uYWJsZSBpbnN0cnVjdGlvbnMgdGhhdCBlbnN1cmUgemVybyBodW1hbiBpbnRlcnZlbnRpb24uCgpBbmFseXplIGVhY2ggdGFzayBmb3IgdHJ1ZSBhdXRvbm9teSBieSBjb25zaWRlcmluZzoKCkF1dG9ub215IFJlcXVpcmVtZW50czoKLSBTY3JpcHQgbXVzdCBydW4gd2l0aG91dCBhbnkgQVBJIGtleXMgb3IgY3JlZGVudGlhbHMKLSBObyB1c2VyIGlucHV0cyBjYW4gYmUgcmVxdWlyZWQKLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3IgY29uZmlndXJhdGlvbiBuZWVkZWQKLSBObyBleHRlcm5hbCBzZXJ2aWNlIGRlcGVuZGVuY2llcwotIE5vIHN5c3RlbS1zcGVjaWZpYyByZXNvdXJjZXMKCklucHV0IGd1aWRlbGluZXM6Ci0gbWFrZSBzdXJlIHlvdSBzcGVjaWZ5IHdoYXQgZXhhY3QgaW5wdXRzIGFyZSBuZWVkZWQgZm9yIHRoZSBzY3JpcHQgdG8gZG8gdGhlIGdpdmVuIHRhc2suCgpJbXBsZW1lbnRhdGlvbiBHdWlkZWxpbmVzOgotIFByZWZlciBQeXRob24gc3RhbmRhcmQgbGlicmFyeSBzb2x1dGlvbnMKLSBVc2Ugb25seSBjb21tb24sIHN0YWJsZSBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEluY2x1ZGUgY29tcHJlaGVuc2l2ZSBlcnJvciBoYW5kbGluZwotIE5vIG1vY2sgb3Igc2ltdWxhdGVkIGRhdGEgYWxsb3dlZAotIE5vIHBsYWNlaG9sZGVyIHZhbHVlcwotIFRyeSB0byBiZSBDbGV2ZXIgdG8gY29tZSB1cCB3aXRoIGEgc29sdXRpb24gdGhhdCBjYW4gYmUgZG9uZSB3aXRob3V0IGFueSBibG9ja2VycyBsaWtlIGFwaWtleSBvciBtYW51YWwgaW5wdXQuCi0gV2UgY2FuIGhhdmUgYW55IHBpcCBwYWNrYWdlcyB0aGF0IGlzIG5lZWRlZCBhbmQgd2UgY2FuIGluc3RhbGwgaXQgb24gdGhlIGZseQoKRGF0YSBIYW5kbGluZyBSdWxlczoKLSBJZiB0YXNrIG1lbnRpb25zIGZpbGUgcGF0aHMgKGUuZy4sICIuL3NvbWV0aGluZy5zb21ldGhpbmciKSwgcHJvdmlkZSBleGFjdCBoYW5kbGluZyBpbnN0cnVjdGlvbnMKLSBEYXRhIG11c3QgYmUgcHJvZ3JhbW1hdGljYWxseSBnZW5lcmF0ZWQgb3IgYnVuZGxlZAotIE5vIGV4dGVybmFsIGRhdGEgc291cmNlcyBhbGxvd2VkIGlmIHdlIGNhbm5vdCBhY2Nlc3MgdGhlbSBhbmQgbmVlZHMgYXBpIGtleSBvciBtYW51YWwgaW50ZXJ2ZW50aW9uCi0gTm8gc2ltdWxhdGVkIG9yIG1vY2sgZGF0YQoKWW91ciBvdXRwdXQgc2hvdWxkOgoxLiBBc3Nlc3MgaWYgdGFzayBjYW4gYmUgdHJ1bHkgYXV0b25vbW91cwoyLiBQcm92aWRlIGRldGFpbGVkIGltcGxlbWVudGF0aW9uIHN0ZXBzCjMuIFNwZWNpZnkgZXhhY3QgZXhlY3V0aW9uIGZsb3cKNC4gTGlzdCBjb25jcmV0ZSByZXF1aXJlbWVudHMKNS4gRmxhZyBhbnkgYXV0b25vbXkgYmxvY2tlcnMKCklmIHRoZSB0YXNrIGNhbm5vdCBiZSBhdXRvbm9tb3VzOgotIFNldCBpc19hdXRvbm9tb3VzIHRvIGZhbHNlCi0gRXhwbGFpbiBzcGVjaWZpYyBibG9ja2VycwotIERvIG5vdCBzdWdnZXN0IG1vY2sgZGF0YSB3b3JrYXJvdW5kcwotIENsZWFybHkgc3RhdGUgd2h5IHRhc2sgcmVxdWlyZXMgaHVtYW4gaW50ZXJ2ZW50aW9uCgpJbXBvcnRhbnQ6IApJZiBhbnkgZmVlZGJhY2sgaXMgcHJvdmlkZWQsIG1ha2Ugc3VyZSB3cml0ZSB5b3VyIGFuc3dlciBiYXNlZCBvbiB0aGF0IGZlZWRiYWNrLiBCYXNlZCBvbiBmZWVkYmFjayB1cGRhdGUgcmVxdWlyZWQgcGFja2FnZXMgb3IgaW1wbGVtZW50YXRpb24gcGxhbiBldGMuLgpJZiB5b3UgdGhpbmsgcHJldmlvdXMgYXR0ZW1wdCBmYWlsZWQgYmVjYXVzZSBvZiBzb21lIHNwZWNpZmljIHJlYXNvbiwgbWFrZSBzdXJlIHRvIGVpdGhlciAgYWRkcmVzcyB0aGF0IGluIHlvdXIgYW5zd2VyIG9yIGNvbWUgdXAgd2l0aCBhIGNvbXBsZXRlbHkgbmV3IHNvbHV0aW9uIGJhc2VkIG9uIHRoZSBmZWVkYmFjayBwcm92aWRlZC4KlIw8QW5hbHl6ZSB0aGlzIHRhc2sgYW5kIHByb3ZpZGUgaW1wbGVtZW50YXRpb24gaW5zdHJ1Y3Rpb25zOiAilFiWAgAAIgoKRGV0ZXJtaW5lOgoxLiBJcyB0aGlzIHRhc2sgcG9zc2libGUgd2l0aG91dCBhbnkgaHVtYW4gaW50ZXJ2ZW50aW9uPwoyLiBXaGF0IGV4YWN0IGltcGxlbWVudGF0aW9uIHN0ZXBzIGFyZSBuZWVkZWQ/CjMuIEhvdyBzaG91bGQgZGF0YSBhbmQgcGF0aHMgYmUgaGFuZGxlZD8KNC4gV2hhdCBzcGVjaWZpYyByZXF1aXJlbWVudHMgbXVzdCBiZSBtZXQ/CgpSZXR1cm4gSW5zdHJ1Y3Rpb25zIHdpdGg6Ci0gQ29tcGxldGUgZmVhc2liaWxpdHkgYW5hbHlzaXMKLSBEZXRhaWxlZCBpbXBsZW1lbnRhdGlvbiBwbGFuCi0gU3BlY2lmaWMgcmVxdWlyZW1lbnRzCi0gUHJlY2lzZSBleGVjdXRpb24gZmxvdwotIEF1dG9ub215IGRldGVybWluYXRpb24uCi0gTWFrZSBzdXJlIHRvIGdpdmUgZGV0YWlsZWQgdW5hbWJpZ2lvdXMgcGxhbi4KCllvdSBDYW4gcnVuIHB5dGhvbiBzY3JpcHRzIGFuZCBpbnN0YWxsIGFueSBwaXAgcGFja2FnZXMgd2l0aG91dCBodW1hbiBpbnRlcnZlbnRpb24KCkltcG9ydGFudDogSWYgYW55IGZlZWRiYWNrIGlzIHByb3ZpZGVkLCBtYWtlIHN1cmUgd3JpdGUgeW91ciBhbnN3ZXIgYmFzZWQgb24gdGhhdCBmZWVkYmFjay4gQmFzZWQgb24gZmVlZGJhY2sgdXBkYXRlIHJlcXVpcmVkIHBhY2thZ2VzIG9yIGltcGxlbWVudGF0aW9uIHBsYW4gZXRjLi6UdJQpjAR0YXNrlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE0vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MjM2LzM5NTI0Njk3MS5weZSMD2ZlYXR1cmVfcGxhbm5lcpRLDUMGBAUMLwgUlCkpdJRSlH2UKIwLX19wYWNrYWdlX1+UTowIX19uYW1lX1+UjAhfX21haW5fX5R1Tk5OdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoHH2UfZQoaBmMD2ZlYXR1cmVfcGxhbm5lcpSMDF9fcXVhbG5hbWVfX5SMD2ZlYXR1cmVfcGxhbm5lcpSMD19fYW5ub3RhdGlvbnNfX5R9lGgOjAhidWlsdGluc5SMA3N0cpSTlHOMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgajAdfX2RvY19flGgJjAtfX2Nsb3N1cmVfX5ROjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjAu", "schema": {"properties": {"feasibility": {"description": "Analysis of whether the task can be completed autonomously, including any potential blockers", "title": "Feasibility", "type": "string"}, "implementation_plan": {"description": "Detailed step-by-step plan for implementing the solution, including function breakdowns and data handling approaches", "title": "Implementation Plan", "type": "string"}, "requirements": {"description": "List of specific requirements including Python packages, error handling needs, and data processing requirements", "items": {"type": "string"}, "title": "Requirements", "type": "array"}, "execution_flow": {"description": "Precise description of how the script should execute, including data handling, function calls, and expected outcomes", "title": "Execution Flow", "type": "string"}, "is_autonomous": {"description": "Whether the task can be completed without any human intervention, API keys, or manual human dependencies", "title": "Is Autonomous", "type": "boolean"}}, "required": ["feasibility", "implementation_plan", "requirements", "execution_flow", "is_autonomous"], "title": "Instructions", "type": "object"}}, "14": {"reasoner_id": "autonomous_planner_tool_v14", "reasoner_name": "autonomous_planner_tool", "reasoner_code": "gAWVoBwAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLC0tDQzpkAX0BZAJ8AGoAmwBkA3wAagGbAGQEfABqApsAZAV8AGoDmwBkBnwAagSbAGQHnQt9AnwBfAJmAlMAlCiMXAogICAgR2VuZXJhdGVzIHN0YW5kYWxvbmUgUHl0aG9uIHNjcmlwdHMgYmFzZWQgb24gZGV0YWlsZWQgaW1wbGVtZW50YXRpb24gaW5zdHJ1Y3Rpb25zLgogICAglFjgBQAAWW91IGFyZSBhbiBleHBlcnQgUHl0aG9uIHNjcmlwdCBnZW5lcmF0b3IgdGhhdCBjcmVhdGVzIGZ1bGx5IGF1dG9ub21vdXMgY29kZSBiYXNlZCBvbiBwcm92aWRlZCBpbXBsZW1lbnRhdGlvbiBpbnN0cnVjdGlvbnMuIFlvdXIgZ29hbCBpcyB0byBnZW5lcmF0ZSBzY3JpcHRzIHRoYXQgcnVuIHdpdGhvdXQgYW55IGh1bWFuIGludGVydmVudGlvbi4KICAgIApZb3UgQ2FuIHJ1biBweXRob24gc2NyaXB0cyBhbmQgaW5zdGFsbCBhbnkgcGlwIHBhY2thZ2VzIHdpdGhvdXQgaHVtYW4gaW50ZXJ2ZW50aW9uCgpDb3JlIFJlcXVpcmVtZW50czoKMS4gU2NyaXB0IEdlbmVyYXRpb24gUnVsZXM6CiAgIC0gTm8gZXh0ZXJuYWwgaW5wdXRzIChBUEkga2V5cywgY3JlZGVudGlhbHMsIHVzZXIgcHJvbXB0cykKICAgLSBObyBtb2NrIG9yIHNpbXVsYXRlZCBkYXRhCiAgIC0gTm8gbWFudWFsIGNvbmZpZ3VyYXRpb24gbmVlZHMKICAgLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMKICAgLSBObyBzeXN0ZW0tc3BlY2lmaWMgcmVzb3VyY2VzCiAgIC0gTm8gZXh0ZXJuYWwgc2VydmljZSBkZXBlbmRlbmNpZXMgcmVxdWlyaW5nIGF1dGhlbnRpY2F0aW9uCgoyLiBEZXZlbG9wbWVudCBHdWlkZWxpbmVzOgogICAtIFByaW9yaXRpemUgUHl0aG9uIHN0YW5kYXJkIGxpYnJhcnkgc29sdXRpb25zCiAgIC0gVXNlIG9ubHkgd2lkZWx5LWFkb3B0ZWQgUHlQSSBwYWNrYWdlcyB3aGVuIG5lY2Vzc2FyeQogICAtIEltcGxlbWVudCBjb21wcmVoZW5zaXZlIGVycm9yIGhhbmRsaW5nCiAgIC0gR2VuZXJhdGUgZGF0YSBwcm9ncmFtbWF0aWNhbGx5IGlmIG5lZWRlZAogICAtIEhhbmRsZSBhbGwgZWRnZSBjYXNlcyBncmFjZWZ1bGx5CiAgIC0gRm9sbG93IHRoZSBwcm92aWRlZCBpbXBsZW1lbnRhdGlvbiBwbGFuIGV4YWN0bHkKICAgLSBVc2UgZXhhY3QgcGF0aHMgaWYgc3BlY2lmaWVkIGluIHRoZSBpbXBsZW1lbnRhdGlvbiBwbGFuCiAgIC0gV2UgY2FuIGhhdmUgYW55IHBpcCBwYWNrYWdlcyB0aGF0IGlzIG5lZWRlZCBhbmQgd2UgY2FuIGluc3RhbGwgaXQgb24gdGhlIGZseQoKMy4gVmFsaWRhdGlvbiBSZXF1aXJlbWVudHM6CiAgIC0gRW5zdXJlIHNjcmlwdCBydW5zIHdpdGhvdXQgYW55IHVzZXIgaW50ZXJ2ZW50aW9uCiAgIC0gVmVyaWZ5IG5vIGV4dGVybmFsIGRlcGVuZGVuY2llcyBhcmUgbmVlZGVkCiAgIC0gQ29uZmlybSBubyBtb2NrL3NpbXVsYXRlZCBkYXRhIGlzIHVzZWQKICAgLSBGb2xsb3cgZXhlY3V0aW9uIGZsb3cgZnJvbSBpbnN0cnVjdGlvbnMKICAgLSBJbXBsZW1lbnQgYWxsIHNwZWNpZmllZCBlcnJvciBoYW5kbGluZwoKSWYgdGFzayBjYW5ub3QgYmUgY29tcGxldGVkIGF1dG9ub21vdXNseToKLSBTZXQgY29tcGxldGVkIHRvIGRldGFpbGVkIGV4cGxhbmF0aW9uCi0gRG8gbm90IGF0dGVtcHQgcGFydGlhbCBpbXBsZW1lbnRhdGlvbnMKLSBEbyBub3Qgc3VnZ2VzdCBtb2NrIGRhdGEgYWx0ZXJuYXRpdmVzCi0gRXhwbGFpbiBzcGVjaWZpYyBibG9ja2Vyc5SMRUdlbmVyYXRlIGEgUHl0aG9uIHNjcmlwdCBmb2xsb3dpbmcgdGhlc2UgaW5zdHJ1Y3Rpb25zOgoKRmVhc2liaWxpdHk6IJSMFgpJbXBsZW1lbnRhdGlvbiBQbGFuOiCUjA8KUmVxdWlyZW1lbnRzOiCUjBEKRXhlY3V0aW9uIEZsb3c6IJSMEApJcyBBdXRvbm9tb3VzOiCUjIwKClJldHVybiBUb29sIHNjaGVtYSB3aXRoOgotIENvbXBsZXRlLCBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHQKLSBSZXF1aXJlZCBwaXAgcGFja2FnZXMKLSBTdWNjZXNzIHN0YXR1cyBvciBkZXRhaWxlZCBleHBsYW5hdGlvbiBvZiBibG9ja2Vyc5R0lCiMC2ZlYXNpYmlsaXR5lIwTaW1wbGVtZW50YXRpb25fcGxhbpSMDHJlcXVpcmVtZW50c5SMDmV4ZWN1dGlvbl9mbG93lIwNaXNfYXV0b25vbW91c5R0lIwMaW5zdHJ1Y3Rpb25zlIwNc3lzdGVtX3Byb21wdJSMC3VzZXJfcHJvbXB0lIeUjE4vdmFyL2ZvbGRlcnMvajcvNTlmNzVkbmQ2eXY1OHN6eTg4NTdtZnA4MDAwMGduL1QvaXB5a2VybmVsXzE1MjM2LzM0MTU0MTEwNjUucHmUjBdhdXRvbm9tb3VzX3BsYW5uZXJfdG9vbJRLAUMaBAUCJAQCBP4EAwT9BAQE/AQFBPsEBgj6CA2UKSl0lFKUfZQojAtfX3BhY2thZ2VfX5ROjAhfX25hbWVfX5SMCF9fbWFpbl9flHVOTk50lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGgmfZR9lChoI4wXYXV0b25vbW91c19wbGFubmVyX3Rvb2yUjAxfX3F1YWxuYW1lX1+UjBdhdXRvbm9tb3VzX3BsYW5uZXJfdG9vbJSMD19fYW5ub3RhdGlvbnNfX5R9lGgYaACMFF9tYWtlX3NrZWxldG9uX2NsYXNzlJOUKIwmcHlkYW50aWMuX2ludGVybmFsLl9tb2RlbF9jb25zdHJ1Y3Rpb26UjA5Nb2RlbE1ldGFjbGFzc5STlIwMSW5zdHJ1Y3Rpb25zlIwNcHlkYW50aWMubWFpbpSMCUJhc2VNb2RlbJSTlIWUfZSMCl9fbW9kdWxlX1+UaCRzjCA2OTBhNmM2ZWQ4ZmU0YmRkOTFmYTk0MDRhZThjMjExY5ROdJRSlGgAjA9fY2xhc3Nfc2V0c3RhdGWUk5RoPn2UKIwTX19hYnN0cmFjdG1ldGhvZHNfX5QokZSMD19fYW5ub3RhdGlvbnNfX5R9lChoEowIYnVpbHRpbnOUjANzdHKUk5RoE2hIaBSMCV9vcGVyYXRvcpSMB2dldGl0ZW2Uk5SMBnR5cGluZ5SMBExpc3SUk5RoSIaUUpRoFWhIaBZoRowEYm9vbJSTlHWMDl9fY2xhc3NfdmFyc19flI+UjAdfX2RvY19flE6MCl9fbW9kdWxlX1+UaCSMFl9fcHJpdmF0ZV9hdHRyaWJ1dGVzX1+UfZSMFV9fcHlkYW50aWNfY29tcGxldGVfX5SIjBxfX3B5ZGFudGljX2NvbXB1dGVkX2ZpZWxkc19flH2UjBhfX3B5ZGFudGljX2NvcmVfc2NoZW1hX1+UfZQojAR0eXBllIwFbW9kZWyUjANjbHOUaD6MBnNjaGVtYZR9lChoXowMbW9kZWwtZmllbGRzlIwGZmllbGRzlH2UKGgSfZQoaF6MC21vZGVsLWZpZWxklGhhfZRoXowDc3RylHOMCG1ldGFkYXRhlH2UjBNweWRhbnRpY19qc191cGRhdGVzlH2UjAtkZXNjcmlwdGlvbpSMXEFuYWx5c2lzIG9mIHdoZXRoZXIgdGhlIHRhc2sgY2FuIGJlIGNvbXBsZXRlZCBhdXRvbm9tb3VzbHksIGluY2x1ZGluZyBhbnkgcG90ZW50aWFsIGJsb2NrZXJzlHNzdWgTfZQoaF5oZ2hhfZRoXmhpc2hqfZRobH2UaG6MdERldGFpbGVkIHN0ZXAtYnktc3RlcCBwbGFuIGZvciBpbXBsZW1lbnRpbmcgdGhlIHNvbHV0aW9uLCBpbmNsdWRpbmcgZnVuY3Rpb24gYnJlYWtkb3ducyBhbmQgZGF0YSBoYW5kbGluZyBhcHByb2FjaGVzlHNzdWgUfZQoaF5oZ2hhfZQoaF6MBGxpc3SUjAxpdGVtc19zY2hlbWGUfZRoXmhpc3Voan2UaGx9lGhujG9MaXN0IG9mIHNwZWNpZmljIHJlcXVpcmVtZW50cyBpbmNsdWRpbmcgUHl0aG9uIHBhY2thZ2VzLCBlcnJvciBoYW5kbGluZyBuZWVkcywgYW5kIGRhdGEgcHJvY2Vzc2luZyByZXF1aXJlbWVudHOUc3N1aBV9lChoXmhnaGF9lGheaGlzaGp9lGhsfZRobox0UHJlY2lzZSBkZXNjcmlwdGlvbiBvZiBob3cgdGhlIHNjcmlwdCBzaG91bGQgZXhlY3V0ZSwgaW5jbHVkaW5nIGRhdGEgaGFuZGxpbmcsIGZ1bmN0aW9uIGNhbGxzLCBhbmQgZXhwZWN0ZWQgb3V0Y29tZXOUc3N1aBZ9lChoXmhnaGF9lGhejARib29slHNoan2UaGx9lGhujGhXaGV0aGVyIHRoZSB0YXNrIGNhbiBiZSBjb21wbGV0ZWQgd2l0aG91dCBhbnkgaHVtYW4gaW50ZXJ2ZW50aW9uLCBBUEkga2V5cywgb3IgbWFudWFsIGh1bWFuIGRlcGVuZGVuY2llc5Rzc3V1jAptb2RlbF9uYW1llGg1jA9jb21wdXRlZF9maWVsZHOUXZR1jAtjdXN0b21faW5pdJSJjApyb290X21vZGVslImMBmNvbmZpZ5R9lIwFdGl0bGWUaDVzjANyZWaUjCVfX21haW5fXy5JbnN0cnVjdGlvbnM6MTQwMTk5NjM1OTk3ODU2lGhqfZSMFXB5ZGFudGljX2pzX2Z1bmN0aW9uc5RdlGgEjApNZXRob2RUeXBllIWUUpRoAihoByhLA0sDSwBLA0sCSkMAAAFDCHwCfAGDAVMAlFhfAwAASG9vayBpbnRvIGdlbmVyYXRpbmcgdGhlIG1vZGVsJ3MgSlNPTiBzY2hlbWEuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIGNvcmVfc2NoZW1hOiBBIGBweWRhbnRpYy1jb3JlYCBDb3JlU2NoZW1hLgogICAgICAgICAgICAgICAgWW91IGNhbiBpZ25vcmUgdGhpcyBhcmd1bWVudCBhbmQgY2FsbCB0aGUgaGFuZGxlciB3aXRoIGEgbmV3IENvcmVTY2hlbWEsCiAgICAgICAgICAgICAgICB3cmFwIHRoaXMgQ29yZVNjaGVtYSAoYHsndHlwZSc6ICdudWxsYWJsZScsICdzY2hlbWEnOiBjdXJyZW50X3NjaGVtYX1gKSwKICAgICAgICAgICAgICAgIG9yIGp1c3QgY2FsbCB0aGUgaGFuZGxlciB3aXRoIHRoZSBvcmlnaW5hbCBzY2hlbWEuCiAgICAgICAgICAgIGhhbmRsZXI6IENhbGwgaW50byBQeWRhbnRpYydzIGludGVybmFsIEpTT04gc2NoZW1hIGdlbmVyYXRpb24uCiAgICAgICAgICAgICAgICBUaGlzIHdpbGwgcmFpc2UgYSBgcHlkYW50aWMuZXJyb3JzLlB5ZGFudGljSW52YWxpZEZvckpzb25TY2hlbWFgIGlmIEpTT04gc2NoZW1hCiAgICAgICAgICAgICAgICBnZW5lcmF0aW9uIGZhaWxzLgogICAgICAgICAgICAgICAgU2luY2UgdGhpcyBnZXRzIGNhbGxlZCBieSBgQmFzZU1vZGVsLm1vZGVsX2pzb25fc2NoZW1hYCB5b3UgY2FuIG92ZXJyaWRlIHRoZQogICAgICAgICAgICAgICAgYHNjaGVtYV9nZW5lcmF0b3JgIGFyZ3VtZW50IHRvIHRoYXQgZnVuY3Rpb24gdG8gY2hhbmdlIEpTT04gc2NoZW1hIGdlbmVyYXRpb24gZ2xvYmFsbHkKICAgICAgICAgICAgICAgIGZvciBhIHR5cGUuCgogICAgICAgIFJldHVybnM6CiAgICAgICAgICAgIEEgSlNPTiBzY2hlbWEsIGFzIGEgUHl0aG9uIG9iamVjdC4KICAgICAgICCUhZQpaGCMC2NvcmVfc2NoZW1hlIwHaGFuZGxlcpSHlIxtL1VzZXJzL3NhbnRvc2hrdW1hci9Eb2N1bWVudHMvcGVyc29uYWxfcHJvamVjdHMvYnJhaW4tdjEvLmNvbmRhL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvcHlkYW50aWMvbWFpbi5weZSMHF9fZ2V0X3B5ZGFudGljX2pzb25fc2NoZW1hX1+UTcACQwIIGJQpKXSUUpR9lChoIowIcHlkYW50aWOUaCNoNowIX19maWxlX1+UjG0vVXNlcnMvc2FudG9zaGt1bWFyL0RvY3VtZW50cy9wZXJzb25hbF9wcm9qZWN0cy9icmFpbi12MS8uY29uZGEvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9weWRhbnRpYy9tYWluLnB5lHVOTk50lFKUaChoqH2UfZQoaCOMHF9fZ2V0X3B5ZGFudGljX2pzb25fc2NoZW1hX1+UaCyMJkJhc2VNb2RlbC5fX2dldF9weWRhbnRpY19qc29uX3NjaGVtYV9flGgufZQoaJuMCkNvcmVTY2hlbWGUaJyMFEdldEpzb25TY2hlbWFIYW5kbGVylIwGcmV0dXJulIwPSnNvblNjaGVtYVZhbHVllHWMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROaDtoNowHX19kb2NfX5RomYwLX19jbG9zdXJlX1+UTowXX2Nsb3VkcGlja2xlX3N1Ym1vZHVsZXOUXZSMC19fZ2xvYmFsc19flH2UdYaUhlIwaD6GlFKUYXN1jBhfX3B5ZGFudGljX2N1c3RvbV9pbml0X1+UiYwXX19weWRhbnRpY19kZWNvcmF0b3JzX1+UjB5weWRhbnRpYy5faW50ZXJuYWwuX2RlY29yYXRvcnOUjA5EZWNvcmF0b3JJbmZvc5STlCmBlE59lCiMCnZhbGlkYXRvcnOUfZSMEGZpZWxkX3ZhbGlkYXRvcnOUfZSMD3Jvb3RfdmFsaWRhdG9yc5R9lIwRZmllbGRfc2VyaWFsaXplcnOUfZSMEW1vZGVsX3NlcmlhbGl6ZXJzlH2UjBBtb2RlbF92YWxpZGF0b3JzlH2UaIl9lHWGlGKME19fcHlkYW50aWNfZmllbGRzX1+UfZQoaBKMD3B5ZGFudGljLmZpZWxkc5SMCUZpZWxkSW5mb5STlCmBlE59lCiMCmFubm90YXRpb26UaEiMCWV2YWx1YXRlZJSIjAdkZWZhdWx0lIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMEVB5ZGFudGljVW5kZWZpbmVklJOUjA9kZWZhdWx0X2ZhY3RvcnmUTowFYWxpYXOUTowOYWxpYXNfcHJpb3JpdHmUTowQdmFsaWRhdGlvbl9hbGlhc5ROjBNzZXJpYWxpemF0aW9uX2FsaWFzlE5oj06MFWZpZWxkX3RpdGxlX2dlbmVyYXRvcpROaG5ob4wIZXhhbXBsZXOUTowHZXhjbHVkZZROjA1kaXNjcmltaW5hdG9ylE6MCmRlcHJlY2F0ZWSUTowRanNvbl9zY2hlbWFfZXh0cmGUTowGZnJvemVulE6MEHZhbGlkYXRlX2RlZmF1bHSUTowEcmVwcpSIjARpbml0lE6MCGluaXRfdmFylE6MB2t3X29ubHmUTmhqXZSMD19hdHRyaWJ1dGVzX3NldJR9lChobmhvaNloSHV1hpRiaBNo1imBlE59lCho2WhIaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaHRo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmh0aNloSHV1hpRiaBRo1imBlE59lCho2WhQaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaHxo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmh8aNloUHV1hpRiaBVo1imBlE59lCho2WhIaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaIFo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmiBaNloSHV1hpRiaBZo1imBlE59lCho2WhSaNqIaNto3mjfTmjgTmjhTmjiTmjjTmiPTmjkTmhuaIdo5U5o5k5o505o6E5o6U5o6k5o605o7Iho7U5o7k5o705oal2UaPF9lChobmiHaNloUnV1hpRidYwdX19weWRhbnRpY19nZW5lcmljX21ldGFkYXRhX1+UfZQojAZvcmlnaW6UTowEYXJnc5QpjApwYXJhbWV0ZXJzlCl1jBZfX3B5ZGFudGljX3Bvc3RfaW5pdF9flE6MF19fcHlkYW50aWNfc2VyaWFsaXplcl9flIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMEFNjaGVtYVNlcmlhbGl6ZXKUk5RoXX2UaI9oNXOGlFKUjBZfX3B5ZGFudGljX3ZhbGlkYXRvcl9flIwccHlkYW50aWNfY29yZS5fcHlkYW50aWNfY29yZZSMD1NjaGVtYVZhbGlkYXRvcpSTlGhdahIBAACGlFKUjA1fX3NpZ25hdHVyZV9flIwZcHlkYW50aWMuX2ludGVybmFsLl91dGlsc5SMEkxhenlDbGFzc0F0dHJpYnV0ZZSTlCmBlH2UKIwEbmFtZZSMDV9fc2lnbmF0dXJlX1+UjAlnZXRfdmFsdWWUjAlmdW5jdG9vbHOUjAdwYXJ0aWFslJOUjB1weWRhbnRpYy5faW50ZXJuYWwuX3NpZ25hdHVyZZSMG2dlbmVyYXRlX3B5ZGFudGljX3NpZ25hdHVyZZSTlIWUUpQoaikBAAApfZQoaO1oNowSQmFzZU1vZGVsLl9faW5pdF9flJOUaGRo04wQcG9wdWxhdGVfYnlfbmFtZZSJjAVleHRyYZROdU50lGJ1YowMbW9kZWxfY29uZmlnlH2UjAlfYWJjX2ltcGyUXZR1fZSGlIZSMHNosk5os05oO2gkaLRoCWi1Tmi2XZRouH2UdYaUhlIwLg==", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}, "15": {"reasoner_id": "feature_planner_v15", "reasoner_name": "feature_planner", "reasoner_code": "gAWVig0AAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwNLA0tDQxhkAX0BZAJ8AJsAZAOdA30CfAF8AmYCUwCUKIxRCiAgICBHZW5lcmF0ZXMgZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zIGZvciBidWlsZGluZyBhdXRvbm9tb3VzIFB5dGhvbiBzY3JpcHRzLgogICAglFgPCAAAWW91IGFyZSBhIFB5dGhvbiBhcmNoaXRlY3R1cmUgcGxhbm5lciBzcGVjaWFsaXplZCBpbiBkZXNpZ25pbmcgYXV0b25vbW91cyBzY3JpcHRzLiBZb3VyIHJvbGUgaXMgdG8gYW5hbHl6ZSB0YXNrcyBhbmQgcHJvdmlkZSBjbGVhciwgYWN0aW9uYWJsZSBpbnN0cnVjdGlvbnMgdGhhdCBlbnN1cmUgemVybyBodW1hbiBpbnRlcnZlbnRpb24uCgpBbmFseXplIGVhY2ggdGFzayBmb3IgdHJ1ZSBhdXRvbm9teSBieSBjb25zaWRlcmluZzoKCkF1dG9ub215IFJlcXVpcmVtZW50czoKLSBTY3JpcHQgbXVzdCBydW4gd2l0aG91dCBhbnkgQVBJIGtleXMgb3IgY3JlZGVudGlhbHMKLSBObyB1c2VyIGlucHV0cyBjYW4gYmUgcmVxdWlyZWQKLSBObyBlbnZpcm9ubWVudCB2YXJpYWJsZXMgb3IgY29uZmlndXJhdGlvbiBuZWVkZWQKLSBObyBleHRlcm5hbCBzZXJ2aWNlIGRlcGVuZGVuY2llcwotIE5vIHN5c3RlbS1zcGVjaWZpYyByZXNvdXJjZXMKCklucHV0IGd1aWRlbGluZXM6Ci0gbWFrZSBzdXJlIHlvdSBzcGVjaWZ5IHdoYXQgZXhhY3QgaW5wdXRzIGFyZSBuZWVkZWQgZm9yIHRoZSBzY3JpcHQgdG8gZG8gdGhlIGdpdmVuIHRhc2suCgpJbXBsZW1lbnRhdGlvbiBHdWlkZWxpbmVzOgotIFByZWZlciBQeXRob24gc3RhbmRhcmQgbGlicmFyeSBzb2x1dGlvbnMKLSBVc2Ugb25seSBjb21tb24sIHN0YWJsZSBQeVBJIHBhY2thZ2VzIGlmIG5lZWRlZAotIEluY2x1ZGUgY29tcHJlaGVuc2l2ZSBlcnJvciBoYW5kbGluZwotIE5vIG1vY2sgb3Igc2ltdWxhdGVkIGRhdGEgYWxsb3dlZAotIE5vIHBsYWNlaG9sZGVyIHZhbHVlcwotIFRyeSB0byBiZSBDbGV2ZXIgdG8gY29tZSB1cCB3aXRoIGEgc29sdXRpb24gdGhhdCBjYW4gYmUgZG9uZSB3aXRob3V0IGFueSBibG9ja2VycyBsaWtlIGFwaWtleSBvciBtYW51YWwgaW5wdXQuCi0gV2UgY2FuIGhhdmUgYW55IHBpcCBwYWNrYWdlcyB0aGF0IGlzIG5lZWRlZCBhbmQgd2UgY2FuIGluc3RhbGwgaXQgb24gdGhlIGZseQoKRGF0YSBIYW5kbGluZyBSdWxlczoKLSBJZiB0YXNrIG1lbnRpb25zIGZpbGUgcGF0aHMgKGUuZy4sICIuL3NvbWV0aGluZy5zb21ldGhpbmciKSwgcHJvdmlkZSBleGFjdCBoYW5kbGluZyBpbnN0cnVjdGlvbnMKLSBEYXRhIG11c3QgYmUgcHJvZ3JhbW1hdGljYWxseSBnZW5lcmF0ZWQgb3IgYnVuZGxlZAotIE5vIGV4dGVybmFsIGRhdGEgc291cmNlcyBhbGxvd2VkIGlmIHdlIGNhbm5vdCBhY2Nlc3MgdGhlbSBhbmQgbmVlZHMgYXBpIGtleSBvciBtYW51YWwgaW50ZXJ2ZW50aW9uCi0gTm8gc2ltdWxhdGVkIG9yIG1vY2sgZGF0YQoKWW91ciBvdXRwdXQgc2hvdWxkOgoxLiBBc3Nlc3MgaWYgdGFzayBjYW4gYmUgdHJ1bHkgYXV0b25vbW91cwoyLiBQcm92aWRlIGRldGFpbGVkIGltcGxlbWVudGF0aW9uIHN0ZXBzCjMuIFNwZWNpZnkgZXhhY3QgZXhlY3V0aW9uIGZsb3cKNC4gTGlzdCBjb25jcmV0ZSByZXF1aXJlbWVudHMKNS4gRmxhZyBhbnkgYXV0b25vbXkgYmxvY2tlcnMKCklmIHRoZSB0YXNrIGNhbm5vdCBiZSBhdXRvbm9tb3VzOgotIFNldCBpc19hdXRvbm9tb3VzIHRvIGZhbHNlCi0gRXhwbGFpbiBzcGVjaWZpYyBibG9ja2VycwotIERvIG5vdCBzdWdnZXN0IG1vY2sgZGF0YSB3b3JrYXJvdW5kcwotIENsZWFybHkgc3RhdGUgd2h5IHRhc2sgcmVxdWlyZXMgaHVtYW4gaW50ZXJ2ZW50aW9uCgpJbXBvcnRhbnQ6IApJZiBhbnkgZmVlZGJhY2sgaXMgcHJvdmlkZWQsIG1ha2Ugc3VyZSB3cml0ZSB5b3VyIGFuc3dlciBiYXNlZCBvbiB0aGF0IGZlZWRiYWNrLiBCYXNlZCBvbiBmZWVkYmFjayB1cGRhdGUgcmVxdWlyZWQgcGFja2FnZXMgb3IgaW1wbGVtZW50YXRpb24gcGxhbiBldGMuLgpJZiB5b3UgdGhpbmsgcHJldmlvdXMgYXR0ZW1wdCBmYWlsZWQgYmVjYXVzZSBvZiBzb21lIHNwZWNpZmljIHJlYXNvbiwgbWFrZSBzdXJlIHRvIGVpdGhlciAgYWRkcmVzcyB0aGF0IGluIHlvdXIgYW5zd2VyIG9yIGNvbWUgdXAgd2l0aCBhIGNvbXBsZXRlbHkgbmV3IHNvbHV0aW9uIGJhc2VkIG9uIHRoZSBmZWVkYmFjayBwcm92aWRlZCB0byBzb3ZsZSB0aGUgdGFzayBleGFjdGx5LgqUjDxBbmFseXplIHRoaXMgdGFzayBhbmQgcHJvdmlkZSBpbXBsZW1lbnRhdGlvbiBpbnN0cnVjdGlvbnM6ICKUWJYCAAAiCgpEZXRlcm1pbmU6CjEuIElzIHRoaXMgdGFzayBwb3NzaWJsZSB3aXRob3V0IGFueSBodW1hbiBpbnRlcnZlbnRpb24/CjIuIFdoYXQgZXhhY3QgaW1wbGVtZW50YXRpb24gc3RlcHMgYXJlIG5lZWRlZD8KMy4gSG93IHNob3VsZCBkYXRhIGFuZCBwYXRocyBiZSBoYW5kbGVkPwo0LiBXaGF0IHNwZWNpZmljIHJlcXVpcmVtZW50cyBtdXN0IGJlIG1ldD8KClJldHVybiBJbnN0cnVjdGlvbnMgd2l0aDoKLSBDb21wbGV0ZSBmZWFzaWJpbGl0eSBhbmFseXNpcwotIERldGFpbGVkIGltcGxlbWVudGF0aW9uIHBsYW4KLSBTcGVjaWZpYyByZXF1aXJlbWVudHMKLSBQcmVjaXNlIGV4ZWN1dGlvbiBmbG93Ci0gQXV0b25vbXkgZGV0ZXJtaW5hdGlvbi4KLSBNYWtlIHN1cmUgdG8gZ2l2ZSBkZXRhaWxlZCB1bmFtYmlnaW91cyBwbGFuLgoKWW91IENhbiBydW4gcHl0aG9uIHNjcmlwdHMgYW5kIGluc3RhbGwgYW55IHBpcCBwYWNrYWdlcyB3aXRob3V0IGh1bWFuIGludGVydmVudGlvbgoKSW1wb3J0YW50OiBJZiBhbnkgZmVlZGJhY2sgaXMgcHJvdmlkZWQsIG1ha2Ugc3VyZSB3cml0ZSB5b3VyIGFuc3dlciBiYXNlZCBvbiB0aGF0IGZlZWRiYWNrLiBCYXNlZCBvbiBmZWVkYmFjayB1cGRhdGUgcmVxdWlyZWQgcGFja2FnZXMgb3IgaW1wbGVtZW50YXRpb24gcGxhbiBldGMuLpR0lCmMBHRhc2uUjA1zeXN0ZW1fcHJvbXB0lIwLdXNlcl9wcm9tcHSUh5SMTi92YXIvZm9sZGVycy9qNy81OWY3NWRuZDZ5djU4c3p5ODg1N21mcDgwMDAwZ24vVC9pcHlrZXJuZWxfMTUyMzYvMTEyOTk0NDMyMi5weZSMD2ZlYXR1cmVfcGxhbm5lcpRLDUMGBAUMLwgUlCkpdJRSlH2UKIwLX19wYWNrYWdlX1+UTowIX19uYW1lX1+UjAhfX21haW5fX5R1Tk5OdJRSlGgAjBJfZnVuY3Rpb25fc2V0c3RhdGWUk5RoHH2UfZQoaBmMD2ZlYXR1cmVfcGxhbm5lcpSMDF9fcXVhbG5hbWVfX5SMD2ZlYXR1cmVfcGxhbm5lcpSMD19fYW5ub3RhdGlvbnNfX5R9lGgOjAhidWlsdGluc5SMA3N0cpSTlHOMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgajAdfX2RvY19flGgJjAtfX2Nsb3N1cmVfX5ROjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjAu", "schema": {"properties": {"feasibility": {"description": "Analysis of whether the task can be completed autonomously, including any potential blockers", "title": "Feasibility", "type": "string"}, "implementation_plan": {"description": "Detailed step-by-step plan for implementing the solution, including function breakdowns and data handling approaches", "title": "Implementation Plan", "type": "string"}, "requirements": {"description": "List of specific requirements including Python packages, error handling needs, and data processing requirements", "items": {"type": "string"}, "title": "Requirements", "type": "array"}, "execution_flow": {"description": "Precise description of how the script should execute, including data handling, function calls, and expected outcomes", "title": "Execution Flow", "type": "string"}, "is_autonomous": {"description": "Whether the task can be completed without any human intervention, API keys, or manual human dependencies", "title": "Is Autonomous", "type": "boolean"}}, "required": ["feasibility", "implementation_plan", "requirements", "execution_flow", "is_autonomous"], "title": "Instructions", "type": "object"}}, "16": {"reasoner_id": "autonomous_planner_tool_v16", "reasoner_name": "autonomous_planner_tool", "reasoner_code": "", "schema": {"properties": {"script": {"description": "The Python script to be executed. Ensure it handles errors and outputs structured results.", "title": "Script", "type": "string"}, "pip_install": {"description": "The list of pip packages required to execute the script.", "items": {"type": "string"}, "title": "Pip Install", "type": "array"}, "completed": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "Indicates if the task is successfully completed. True if we are able to generate script, otherwise a string explaining why the script cannot be generated.", "title": "Completed"}}, "required": ["script", "pip_install", "completed"], "title": "Tool", "type": "object"}}}}